node {
  name: "is_training/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@is_training"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "is_training"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@is_training"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "is_training/Assign"
  op: "Assign"
  input: "is_training"
  input: "is_training/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@is_training"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "is_training/read"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@is_training"
      }
    }
  }
}
node {
  name: "Assign/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "is_training"
  input: "Assign/value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@is_training"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_1/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "Assign_1"
  op: "Assign"
  input: "is_training"
  input: "Assign_1/value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@is_training"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "input_images"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "input_feature_map"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "input_transform_matrix"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 6
        }
      }
    }
  }
}
node {
  name: "input_box_masks_0"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "input_box_widths"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "global_step/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "split"
  op: "Split"
  input: "split/split_dim"
  input: "input_images"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 123.68000030517578
      }
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "split"
  input: "sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 116.77999877929688
      }
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "split:1"
  input: "sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 103.94000244140625
      }
    }
  }
}
node {
  name: "sub_2"
  op: "Sub"
  input: "split:2"
  input: "sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "sub"
  input: "sub_1"
  input: "sub_2"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/Pad"
  op: "Pad"
  input: "concat"
  input: "resnet_v1_50/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.13299275934696198
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/conv1/weights"
  input: "resnet_v1_50/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/Pad"
  input: "resnet_v1_50/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/beta"
  input: "resnet_v1_50/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/conv1/Conv2D"
  input: "resnet_v1_50/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/pool1/MaxPool"
  op: "MaxPool"
  input: "resnet_v1_50/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20155644416809082
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/pool1/MaxPool"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20155644416809082
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/pool1/MaxPool"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06718548387289047
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20155644416809082
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06718548387289047
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20155644416809082
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool"
  op: "MaxPool"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/Pad"
  op: "Pad"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06718548387289047
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Pad"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20155644416809082
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047507308423519135
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.142521932721138
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047507308423519135
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.142521932721138
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047507308423519135
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.142521932721138
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool"
  op: "MaxPool"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/Pad"
  op: "Pad"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047507308423519135
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Pad"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.142521932721138
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/shortcut/MaxPool"
  op: "MaxPool"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/Pad"
  op: "Pad"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/Pad"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/shortcut/MaxPool"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.023753654211759567
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0356304831802845
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.023753654211759567
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0356304831802845
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.023753654211759567
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/Shape"
  op: "Shape"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice"
  op: "StridedSlice"
  input: "feature_fusion/Shape"
  input: "feature_fusion/strided_slice/stack"
  input: "feature_fusion/strided_slice/stack_1"
  input: "feature_fusion/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "feature_fusion/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/mul"
  op: "Mul"
  input: "feature_fusion/strided_slice"
  input: "feature_fusion/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/Shape_1"
  op: "Shape"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_1"
  op: "StridedSlice"
  input: "feature_fusion/Shape_1"
  input: "feature_fusion/strided_slice_1/stack"
  input: "feature_fusion/strided_slice_1/stack_1"
  input: "feature_fusion/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "feature_fusion/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/mul_1"
  op: "Mul"
  input: "feature_fusion/strided_slice_1"
  input: "feature_fusion/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/ResizeBilinear/size"
  op: "Pack"
  input: "feature_fusion/mul"
  input: "feature_fusion/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "feature_fusion/ResizeBilinear"
  op: "ResizeBilinear"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/Relu"
  input: "feature_fusion/ResizeBilinear/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "feature_fusion/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "feature_fusion/concat"
  op: "ConcatV2"
  input: "feature_fusion/ResizeBilinear"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Relu"
  input: "feature_fusion/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\n\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.047245558351278305
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047245558351278305
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "feature_fusion/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "feature_fusion/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "feature_fusion/Conv/weights/Initializer/random_uniform/max"
  input: "feature_fusion/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "feature_fusion/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "feature_fusion/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "feature_fusion/Conv/weights/Initializer/random_uniform/mul"
  input: "feature_fusion/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2560
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv/weights/Assign"
  op: "Assign"
  input: "feature_fusion/Conv/weights"
  input: "feature_fusion/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv/weights/read"
  op: "Identity"
  input: "feature_fusion/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "feature_fusion/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "feature_fusion/Conv/kernel/Regularizer/l2_regularizer/scale"
  input: "feature_fusion/Conv/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/Conv2D"
  op: "Conv2D"
  input: "feature_fusion/concat"
  input: "feature_fusion/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "feature_fusion/Conv/BatchNorm/gamma"
  input: "feature_fusion/Conv/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/gamma/read"
  op: "Identity"
  input: "feature_fusion/Conv/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "feature_fusion/Conv/BatchNorm/beta"
  input: "feature_fusion/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "feature_fusion/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "feature_fusion/Conv/BatchNorm/moving_mean"
  input: "feature_fusion/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "feature_fusion/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "feature_fusion/Conv/BatchNorm/moving_variance"
  input: "feature_fusion/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "feature_fusion/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "feature_fusion/Conv/Conv2D"
  input: "feature_fusion/Conv/BatchNorm/gamma/read"
  input: "feature_fusion/Conv/BatchNorm/beta/read"
  input: "feature_fusion/Conv/BatchNorm/moving_mean/read"
  input: "feature_fusion/Conv/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/Relu"
  op: "Relu"
  input: "feature_fusion/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "feature_fusion/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "feature_fusion/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "feature_fusion/Conv_1/weights/Initializer/random_uniform/max"
  input: "feature_fusion/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "feature_fusion/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "feature_fusion/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "feature_fusion/Conv_1/weights/Initializer/random_uniform/mul"
  input: "feature_fusion/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_1/weights/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_1/weights"
  input: "feature_fusion/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_1/weights/read"
  op: "Identity"
  input: "feature_fusion/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "feature_fusion/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "feature_fusion/Conv_1/kernel/Regularizer/l2_regularizer/scale"
  input: "feature_fusion/Conv_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/Conv2D"
  op: "Conv2D"
  input: "feature_fusion/Conv/Relu"
  input: "feature_fusion/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_1/BatchNorm/gamma"
  input: "feature_fusion/Conv_1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/gamma/read"
  op: "Identity"
  input: "feature_fusion/Conv_1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_1/BatchNorm/beta"
  input: "feature_fusion/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "feature_fusion/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_1/BatchNorm/moving_mean"
  input: "feature_fusion/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "feature_fusion/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_1/BatchNorm/moving_variance"
  input: "feature_fusion/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "feature_fusion/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "feature_fusion/Conv_1/Conv2D"
  input: "feature_fusion/Conv_1/BatchNorm/gamma/read"
  input: "feature_fusion/Conv_1/BatchNorm/beta/read"
  input: "feature_fusion/Conv_1/BatchNorm/moving_mean/read"
  input: "feature_fusion/Conv_1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/Relu"
  op: "Relu"
  input: "feature_fusion/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/Shape_2"
  op: "Shape"
  input: "feature_fusion/Conv_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_2"
  op: "StridedSlice"
  input: "feature_fusion/Shape_2"
  input: "feature_fusion/strided_slice_2/stack"
  input: "feature_fusion/strided_slice_2/stack_1"
  input: "feature_fusion/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "feature_fusion/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/mul_2"
  op: "Mul"
  input: "feature_fusion/strided_slice_2"
  input: "feature_fusion/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/Shape_3"
  op: "Shape"
  input: "feature_fusion/Conv_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_3"
  op: "StridedSlice"
  input: "feature_fusion/Shape_3"
  input: "feature_fusion/strided_slice_3/stack"
  input: "feature_fusion/strided_slice_3/stack_1"
  input: "feature_fusion/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "feature_fusion/mul_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/mul_3"
  op: "Mul"
  input: "feature_fusion/strided_slice_3"
  input: "feature_fusion/mul_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/ResizeBilinear_1/size"
  op: "Pack"
  input: "feature_fusion/mul_2"
  input: "feature_fusion/mul_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "feature_fusion/ResizeBilinear_1"
  op: "ResizeBilinear"
  input: "feature_fusion/Conv_1/Relu"
  input: "feature_fusion/ResizeBilinear_1/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "feature_fusion/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "feature_fusion/concat_1"
  op: "ConcatV2"
  input: "feature_fusion/ResizeBilinear_1"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Relu"
  input: "feature_fusion/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/Conv_2/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "feature_fusion/Conv_2/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "feature_fusion/Conv_2/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "feature_fusion/Conv_2/weights/Initializer/random_uniform/max"
  input: "feature_fusion/Conv_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "feature_fusion/Conv_2/weights/Initializer/random_uniform/RandomUniform"
  input: "feature_fusion/Conv_2/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/weights/Initializer/random_uniform"
  op: "Add"
  input: "feature_fusion/Conv_2/weights/Initializer/random_uniform/mul"
  input: "feature_fusion/Conv_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_2/weights/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_2/weights"
  input: "feature_fusion/Conv_2/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_2/weights/read"
  op: "Identity"
  input: "feature_fusion/Conv_2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "feature_fusion/Conv_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "feature_fusion/Conv_2/kernel/Regularizer/l2_regularizer/scale"
  input: "feature_fusion/Conv_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/Conv2D"
  op: "Conv2D"
  input: "feature_fusion/concat_1"
  input: "feature_fusion/Conv_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_2/BatchNorm/gamma"
  input: "feature_fusion/Conv_2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/gamma/read"
  op: "Identity"
  input: "feature_fusion/Conv_2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_2/BatchNorm/beta"
  input: "feature_fusion/Conv_2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/beta/read"
  op: "Identity"
  input: "feature_fusion/Conv_2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_2/BatchNorm/moving_mean"
  input: "feature_fusion/Conv_2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "feature_fusion/Conv_2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_2/BatchNorm/moving_variance"
  input: "feature_fusion/Conv_2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "feature_fusion/Conv_2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "feature_fusion/Conv_2/Conv2D"
  input: "feature_fusion/Conv_2/BatchNorm/gamma/read"
  input: "feature_fusion/Conv_2/BatchNorm/beta/read"
  input: "feature_fusion/Conv_2/BatchNorm/moving_mean/read"
  input: "feature_fusion/Conv_2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/Relu"
  op: "Relu"
  input: "feature_fusion/Conv_2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/Conv_3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "feature_fusion/Conv_3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "feature_fusion/Conv_3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "feature_fusion/Conv_3/weights/Initializer/random_uniform/max"
  input: "feature_fusion/Conv_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "feature_fusion/Conv_3/weights/Initializer/random_uniform/RandomUniform"
  input: "feature_fusion/Conv_3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/weights/Initializer/random_uniform"
  op: "Add"
  input: "feature_fusion/Conv_3/weights/Initializer/random_uniform/mul"
  input: "feature_fusion/Conv_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_3/weights/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_3/weights"
  input: "feature_fusion/Conv_3/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_3/weights/read"
  op: "Identity"
  input: "feature_fusion/Conv_3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "feature_fusion/Conv_3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "feature_fusion/Conv_3/kernel/Regularizer/l2_regularizer/scale"
  input: "feature_fusion/Conv_3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/Conv2D"
  op: "Conv2D"
  input: "feature_fusion/Conv_2/Relu"
  input: "feature_fusion/Conv_3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_3/BatchNorm/gamma"
  input: "feature_fusion/Conv_3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/gamma/read"
  op: "Identity"
  input: "feature_fusion/Conv_3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_3/BatchNorm/beta"
  input: "feature_fusion/Conv_3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/beta/read"
  op: "Identity"
  input: "feature_fusion/Conv_3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_3/BatchNorm/moving_mean"
  input: "feature_fusion/Conv_3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "feature_fusion/Conv_3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_3/BatchNorm/moving_variance"
  input: "feature_fusion/Conv_3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "feature_fusion/Conv_3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "feature_fusion/Conv_3/Conv2D"
  input: "feature_fusion/Conv_3/BatchNorm/gamma/read"
  input: "feature_fusion/Conv_3/BatchNorm/beta/read"
  input: "feature_fusion/Conv_3/BatchNorm/moving_mean/read"
  input: "feature_fusion/Conv_3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/Relu"
  op: "Relu"
  input: "feature_fusion/Conv_3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/Shape_4"
  op: "Shape"
  input: "feature_fusion/Conv_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_4"
  op: "StridedSlice"
  input: "feature_fusion/Shape_4"
  input: "feature_fusion/strided_slice_4/stack"
  input: "feature_fusion/strided_slice_4/stack_1"
  input: "feature_fusion/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "feature_fusion/mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/mul_4"
  op: "Mul"
  input: "feature_fusion/strided_slice_4"
  input: "feature_fusion/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/Shape_5"
  op: "Shape"
  input: "feature_fusion/Conv_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_5"
  op: "StridedSlice"
  input: "feature_fusion/Shape_5"
  input: "feature_fusion/strided_slice_5/stack"
  input: "feature_fusion/strided_slice_5/stack_1"
  input: "feature_fusion/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "feature_fusion/mul_5/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/mul_5"
  op: "Mul"
  input: "feature_fusion/strided_slice_5"
  input: "feature_fusion/mul_5/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/ResizeBilinear_2/size"
  op: "Pack"
  input: "feature_fusion/mul_4"
  input: "feature_fusion/mul_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "feature_fusion/ResizeBilinear_2"
  op: "ResizeBilinear"
  input: "feature_fusion/Conv_3/Relu"
  input: "feature_fusion/ResizeBilinear_2/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "feature_fusion/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "feature_fusion/concat_2"
  op: "ConcatV2"
  input: "feature_fusion/ResizeBilinear_2"
  input: "resnet_v1_50/pool1/MaxPool"
  input: "feature_fusion/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/Conv_4/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.19364917278289795
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.19364917278289795
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "feature_fusion/Conv_4/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "feature_fusion/Conv_4/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "feature_fusion/Conv_4/weights/Initializer/random_uniform/max"
  input: "feature_fusion/Conv_4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "feature_fusion/Conv_4/weights/Initializer/random_uniform/RandomUniform"
  input: "feature_fusion/Conv_4/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/weights/Initializer/random_uniform"
  op: "Add"
  input: "feature_fusion/Conv_4/weights/Initializer/random_uniform/mul"
  input: "feature_fusion/Conv_4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_4/weights/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_4/weights"
  input: "feature_fusion/Conv_4/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_4/weights/read"
  op: "Identity"
  input: "feature_fusion/Conv_4/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "feature_fusion/Conv_4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "feature_fusion/Conv_4/kernel/Regularizer/l2_regularizer/scale"
  input: "feature_fusion/Conv_4/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/Conv2D"
  op: "Conv2D"
  input: "feature_fusion/concat_2"
  input: "feature_fusion/Conv_4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_4/BatchNorm/gamma"
  input: "feature_fusion/Conv_4/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/gamma/read"
  op: "Identity"
  input: "feature_fusion/Conv_4/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/beta/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_4/BatchNorm/beta"
  input: "feature_fusion/Conv_4/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/beta/read"
  op: "Identity"
  input: "feature_fusion/Conv_4/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_4/BatchNorm/moving_mean"
  input: "feature_fusion/Conv_4/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "feature_fusion/Conv_4/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_4/BatchNorm/moving_variance"
  input: "feature_fusion/Conv_4/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "feature_fusion/Conv_4/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "feature_fusion/Conv_4/Conv2D"
  input: "feature_fusion/Conv_4/BatchNorm/gamma/read"
  input: "feature_fusion/Conv_4/BatchNorm/beta/read"
  input: "feature_fusion/Conv_4/BatchNorm/moving_mean/read"
  input: "feature_fusion/Conv_4/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/Relu"
  op: "Relu"
  input: "feature_fusion/Conv_4/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/Conv_5/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633018494
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "feature_fusion/Conv_5/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "feature_fusion/Conv_5/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "feature_fusion/Conv_5/weights/Initializer/random_uniform/max"
  input: "feature_fusion/Conv_5/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "feature_fusion/Conv_5/weights/Initializer/random_uniform/RandomUniform"
  input: "feature_fusion/Conv_5/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/weights/Initializer/random_uniform"
  op: "Add"
  input: "feature_fusion/Conv_5/weights/Initializer/random_uniform/mul"
  input: "feature_fusion/Conv_5/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_5/weights/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_5/weights"
  input: "feature_fusion/Conv_5/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_5/weights/read"
  op: "Identity"
  input: "feature_fusion/Conv_5/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "feature_fusion/Conv_5/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "feature_fusion/Conv_5/kernel/Regularizer/l2_regularizer/scale"
  input: "feature_fusion/Conv_5/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/Conv2D"
  op: "Conv2D"
  input: "feature_fusion/Conv_4/Relu"
  input: "feature_fusion/Conv_5/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_5/BatchNorm/gamma"
  input: "feature_fusion/Conv_5/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/gamma/read"
  op: "Identity"
  input: "feature_fusion/Conv_5/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/beta/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_5/BatchNorm/beta"
  input: "feature_fusion/Conv_5/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/beta/read"
  op: "Identity"
  input: "feature_fusion/Conv_5/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_5/BatchNorm/moving_mean"
  input: "feature_fusion/Conv_5/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "feature_fusion/Conv_5/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_5/BatchNorm/moving_variance"
  input: "feature_fusion/Conv_5/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "feature_fusion/Conv_5/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "feature_fusion/Conv_5/Conv2D"
  input: "feature_fusion/Conv_5/BatchNorm/gamma/read"
  input: "feature_fusion/Conv_5/BatchNorm/beta/read"
  input: "feature_fusion/Conv_5/BatchNorm/moving_mean/read"
  input: "feature_fusion/Conv_5/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/Relu"
  op: "Relu"
  input: "feature_fusion/Conv_5/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/Conv_6/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633018494
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "feature_fusion/Conv_6/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "feature_fusion/Conv_6/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "feature_fusion/Conv_6/weights/Initializer/random_uniform/max"
  input: "feature_fusion/Conv_6/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "feature_fusion/Conv_6/weights/Initializer/random_uniform/RandomUniform"
  input: "feature_fusion/Conv_6/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/weights/Initializer/random_uniform"
  op: "Add"
  input: "feature_fusion/Conv_6/weights/Initializer/random_uniform/mul"
  input: "feature_fusion/Conv_6/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_6/weights/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_6/weights"
  input: "feature_fusion/Conv_6/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_6/weights/read"
  op: "Identity"
  input: "feature_fusion/Conv_6/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "feature_fusion/Conv_6/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "feature_fusion/Conv_6/kernel/Regularizer/l2_regularizer/scale"
  input: "feature_fusion/Conv_6/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/Conv2D"
  op: "Conv2D"
  input: "feature_fusion/Conv_5/Relu"
  input: "feature_fusion/Conv_6/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_6/BatchNorm/gamma"
  input: "feature_fusion/Conv_6/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/gamma/read"
  op: "Identity"
  input: "feature_fusion/Conv_6/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/beta/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_6/BatchNorm/beta"
  input: "feature_fusion/Conv_6/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/beta/read"
  op: "Identity"
  input: "feature_fusion/Conv_6/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_6/BatchNorm/moving_mean"
  input: "feature_fusion/Conv_6/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "feature_fusion/Conv_6/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_6/BatchNorm/moving_variance"
  input: "feature_fusion/Conv_6/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "feature_fusion/Conv_6/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "feature_fusion/Conv_6/Conv2D"
  input: "feature_fusion/Conv_6/BatchNorm/gamma/read"
  input: "feature_fusion/Conv_6/BatchNorm/beta/read"
  input: "feature_fusion/Conv_6/BatchNorm/moving_mean/read"
  input: "feature_fusion/Conv_6/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/Relu"
  op: "Relu"
  input: "feature_fusion/Conv_6/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/Conv_7/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_7/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.42640143632888794
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_7/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.42640143632888794
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_7/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "feature_fusion/Conv_7/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "feature_fusion/Conv_7/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "feature_fusion/Conv_7/weights/Initializer/random_uniform/max"
  input: "feature_fusion/Conv_7/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_7/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "feature_fusion/Conv_7/weights/Initializer/random_uniform/RandomUniform"
  input: "feature_fusion/Conv_7/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_7/weights/Initializer/random_uniform"
  op: "Add"
  input: "feature_fusion/Conv_7/weights/Initializer/random_uniform/mul"
  input: "feature_fusion/Conv_7/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_7/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_7/weights/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_7/weights"
  input: "feature_fusion/Conv_7/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_7/weights/read"
  op: "Identity"
  input: "feature_fusion/Conv_7/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_7/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_7/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "feature_fusion/Conv_7/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_7/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "feature_fusion/Conv_7/kernel/Regularizer/l2_regularizer/scale"
  input: "feature_fusion/Conv_7/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_7/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_7/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_7/biases/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_7/biases"
  input: "feature_fusion/Conv_7/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_7/biases/read"
  op: "Identity"
  input: "feature_fusion/Conv_7/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/biases"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_7/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_7/Conv2D"
  op: "Conv2D"
  input: "feature_fusion/Conv_6/Relu"
  input: "feature_fusion/Conv_7/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_7/BiasAdd"
  op: "BiasAdd"
  input: "feature_fusion/Conv_7/Conv2D"
  input: "feature_fusion/Conv_7/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "feature_fusion/Conv_7/Sigmoid"
  op: "Sigmoid"
  input: "feature_fusion/Conv_7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/Conv_8/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_8/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.40824830532073975
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_8/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40824830532073975
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_8/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "feature_fusion/Conv_8/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "feature_fusion/Conv_8/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "feature_fusion/Conv_8/weights/Initializer/random_uniform/max"
  input: "feature_fusion/Conv_8/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_8/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "feature_fusion/Conv_8/weights/Initializer/random_uniform/RandomUniform"
  input: "feature_fusion/Conv_8/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_8/weights/Initializer/random_uniform"
  op: "Add"
  input: "feature_fusion/Conv_8/weights/Initializer/random_uniform/mul"
  input: "feature_fusion/Conv_8/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_8/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_8/weights/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_8/weights"
  input: "feature_fusion/Conv_8/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_8/weights/read"
  op: "Identity"
  input: "feature_fusion/Conv_8/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_8/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_8/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "feature_fusion/Conv_8/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_8/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "feature_fusion/Conv_8/kernel/Regularizer/l2_regularizer/scale"
  input: "feature_fusion/Conv_8/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_8/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_8/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_8/biases/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_8/biases"
  input: "feature_fusion/Conv_8/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_8/biases/read"
  op: "Identity"
  input: "feature_fusion/Conv_8/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/biases"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_8/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_8/Conv2D"
  op: "Conv2D"
  input: "feature_fusion/Conv_6/Relu"
  input: "feature_fusion/Conv_8/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_8/BiasAdd"
  op: "BiasAdd"
  input: "feature_fusion/Conv_8/Conv2D"
  input: "feature_fusion/Conv_8/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "feature_fusion/Conv_8/Sigmoid"
  op: "Sigmoid"
  input: "feature_fusion/Conv_8/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/mul_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 512.0
      }
    }
  }
}
node {
  name: "feature_fusion/mul_6"
  op: "Mul"
  input: "feature_fusion/Conv_8/Sigmoid"
  input: "feature_fusion/mul_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/Conv_9/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_9/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.42640143632888794
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_9/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.42640143632888794
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_9/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "feature_fusion/Conv_9/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "feature_fusion/Conv_9/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "feature_fusion/Conv_9/weights/Initializer/random_uniform/max"
  input: "feature_fusion/Conv_9/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_9/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "feature_fusion/Conv_9/weights/Initializer/random_uniform/RandomUniform"
  input: "feature_fusion/Conv_9/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_9/weights/Initializer/random_uniform"
  op: "Add"
  input: "feature_fusion/Conv_9/weights/Initializer/random_uniform/mul"
  input: "feature_fusion/Conv_9/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_9/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_9/weights/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_9/weights"
  input: "feature_fusion/Conv_9/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_9/weights/read"
  op: "Identity"
  input: "feature_fusion/Conv_9/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_9/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_9/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "feature_fusion/Conv_9/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_9/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "feature_fusion/Conv_9/kernel/Regularizer/l2_regularizer/scale"
  input: "feature_fusion/Conv_9/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_9/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_9/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "feature_fusion/Conv_9/biases/Assign"
  op: "Assign"
  input: "feature_fusion/Conv_9/biases"
  input: "feature_fusion/Conv_9/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_9/biases/read"
  op: "Identity"
  input: "feature_fusion/Conv_9/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/biases"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_9/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_9/Conv2D"
  op: "Conv2D"
  input: "feature_fusion/Conv_6/Relu"
  input: "feature_fusion/Conv_9/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "feature_fusion/Conv_9/BiasAdd"
  op: "BiasAdd"
  input: "feature_fusion/Conv_9/Conv2D"
  input: "feature_fusion/Conv_9/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "feature_fusion/Conv_9/Sigmoid"
  op: "Sigmoid"
  input: "feature_fusion/Conv_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "feature_fusion/sub"
  op: "Sub"
  input: "feature_fusion/Conv_9/Sigmoid"
  input: "feature_fusion/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/mul_7/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.1415927410125732
      }
    }
  }
}
node {
  name: "feature_fusion/mul_7"
  op: "Mul"
  input: "feature_fusion/sub"
  input: "feature_fusion/mul_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "feature_fusion/truediv"
  op: "RealDiv"
  input: "feature_fusion/mul_7"
  input: "feature_fusion/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "feature_fusion/concat_3"
  op: "ConcatV2"
  input: "feature_fusion/mul_6"
  input: "feature_fusion/truediv"
  input: "feature_fusion/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/ArgMax"
  op: "ArgMax"
  input: "input_box_widths"
  input: "RoIrotate/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/add"
  op: "Add"
  input: "RoIrotate/ArgMax"
  input: "RoIrotate/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/strided_slice/stack"
  op: "Pack"
  input: "RoIrotate/ArgMax"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/strided_slice/stack_1"
  op: "Pack"
  input: "RoIrotate/add"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice"
  op: "StridedSlice"
  input: "input_box_widths"
  input: "RoIrotate/strided_slice/stack"
  input: "RoIrotate/strided_slice/stack_1"
  input: "RoIrotate/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/Shape"
  op: "Shape"
  input: "input_feature_map"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/Cast"
  op: "Cast"
  input: "RoIrotate/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "RoIrotate/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_1"
  op: "StridedSlice"
  input: "input_feature_map"
  input: "RoIrotate/strided_slice_1/stack"
  input: "RoIrotate/strided_slice_1/stack_1"
  input: "RoIrotate/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/ExpandDims"
  op: "ExpandDims"
  input: "RoIrotate/strided_slice_1"
  input: "RoIrotate/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/Shape_1"
  op: "Shape"
  input: "input_box_masks_0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_2"
  op: "StridedSlice"
  input: "RoIrotate/Shape_1"
  input: "RoIrotate/strided_slice_2/stack"
  input: "RoIrotate/strided_slice_2/stack_1"
  input: "RoIrotate/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/Tile/multiples/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/Tile/multiples"
  op: "Pack"
  input: "RoIrotate/strided_slice_2"
  input: "RoIrotate/Tile/multiples/1"
  input: "RoIrotate/Tile/multiples/2"
  input: "RoIrotate/Tile/multiples/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/Tile"
  op: "Tile"
  input: "RoIrotate/ExpandDims"
  input: "RoIrotate/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/concat/concat_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/concat"
  op: "Identity"
  input: "RoIrotate/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/Shape_2"
  op: "Shape"
  input: "RoIrotate/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_3"
  op: "StridedSlice"
  input: "RoIrotate/Shape_2"
  input: "RoIrotate/strided_slice_3/stack"
  input: "RoIrotate/strided_slice_3/stack_1"
  input: "RoIrotate/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/Shape_3"
  op: "Shape"
  input: "RoIrotate/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_4"
  op: "StridedSlice"
  input: "RoIrotate/Shape_3"
  input: "RoIrotate/strided_slice_4/stack"
  input: "RoIrotate/strided_slice_4/stack_1"
  input: "RoIrotate/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/Shape_4"
  op: "Shape"
  input: "RoIrotate/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_5"
  op: "StridedSlice"
  input: "RoIrotate/Shape_4"
  input: "RoIrotate/strided_slice_5/stack"
  input: "RoIrotate/strided_slice_5/stack_1"
  input: "RoIrotate/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RoIrotate/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "RoIrotate/Reshape/shape"
  op: "Pack"
  input: "RoIrotate/strided_slice_3"
  input: "RoIrotate/Reshape/shape/1"
  input: "RoIrotate/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/Reshape"
  op: "Reshape"
  input: "input_transform_matrix"
  input: "RoIrotate/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/Shape_5"
  op: "Shape"
  input: "RoIrotate/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_6"
  op: "StridedSlice"
  input: "RoIrotate/Shape_5"
  input: "RoIrotate/strided_slice_6/stack"
  input: "RoIrotate/strided_slice_6/stack_1"
  input: "RoIrotate/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/LinSpace/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RoIrotate/LinSpace/stop"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RoIrotate/LinSpace"
  op: "LinSpace"
  input: "RoIrotate/LinSpace/start"
  input: "RoIrotate/LinSpace/stop"
  input: "RoIrotate/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/LinSpace_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RoIrotate/LinSpace_1/stop"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RoIrotate/LinSpace_1"
  op: "LinSpace"
  input: "RoIrotate/LinSpace_1/start"
  input: "RoIrotate/LinSpace_1/stop"
  input: "RoIrotate/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/Cast_1"
  op: "Cast"
  input: "RoIrotate/strided_slice_5"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "RoIrotate/mul"
  op: "Mul"
  input: "RoIrotate/LinSpace"
  input: "RoIrotate/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/Cast_2"
  op: "Cast"
  input: "RoIrotate/strided_slice_4"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "RoIrotate/mul_1"
  op: "Mul"
  input: "RoIrotate/LinSpace_1"
  input: "RoIrotate/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/meshgrid/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "RoIrotate/meshgrid/Reshape"
  op: "Reshape"
  input: "RoIrotate/mul"
  input: "RoIrotate/meshgrid/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/meshgrid/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "RoIrotate/meshgrid/Reshape_1"
  op: "Reshape"
  input: "RoIrotate/mul_1"
  input: "RoIrotate/meshgrid/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/meshgrid/Size"
  op: "Size"
  input: "RoIrotate/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/meshgrid/Size_1"
  op: "Size"
  input: "RoIrotate/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/meshgrid/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "RoIrotate/meshgrid/Reshape_2"
  op: "Reshape"
  input: "RoIrotate/meshgrid/Reshape"
  input: "RoIrotate/meshgrid/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/meshgrid/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "RoIrotate/meshgrid/Reshape_3"
  op: "Reshape"
  input: "RoIrotate/meshgrid/Reshape_1"
  input: "RoIrotate/meshgrid/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/meshgrid/ones/mul"
  op: "Mul"
  input: "RoIrotate/meshgrid/Size_1"
  input: "RoIrotate/meshgrid/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/meshgrid/ones/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "RoIrotate/meshgrid/ones/Less"
  op: "Less"
  input: "RoIrotate/meshgrid/ones/mul"
  input: "RoIrotate/meshgrid/ones/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/meshgrid/ones/packed"
  op: "Pack"
  input: "RoIrotate/meshgrid/Size_1"
  input: "RoIrotate/meshgrid/Size"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/meshgrid/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RoIrotate/meshgrid/ones"
  op: "Fill"
  input: "RoIrotate/meshgrid/ones/packed"
  input: "RoIrotate/meshgrid/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/meshgrid/mul"
  op: "Mul"
  input: "RoIrotate/meshgrid/Reshape_2"
  input: "RoIrotate/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/meshgrid/mul_1"
  op: "Mul"
  input: "RoIrotate/meshgrid/Reshape_3"
  input: "RoIrotate/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RoIrotate/Reshape_1"
  op: "Reshape"
  input: "RoIrotate/meshgrid/mul"
  input: "RoIrotate/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RoIrotate/Reshape_2"
  op: "Reshape"
  input: "RoIrotate/meshgrid/mul_1"
  input: "RoIrotate/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/ones_like/Shape"
  op: "Shape"
  input: "RoIrotate/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RoIrotate/ones_like"
  op: "Fill"
  input: "RoIrotate/ones_like/Shape"
  input: "RoIrotate/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/stack"
  op: "Pack"
  input: "RoIrotate/Reshape_1"
  input: "RoIrotate/Reshape_2"
  input: "RoIrotate/ones_like"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/ExpandDims_1"
  op: "ExpandDims"
  input: "RoIrotate/stack"
  input: "RoIrotate/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/stack_1/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/stack_1/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/stack_1"
  op: "Pack"
  input: "RoIrotate/strided_slice_6"
  input: "RoIrotate/stack_1/1"
  input: "RoIrotate/stack_1/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/Tile_1"
  op: "Tile"
  input: "RoIrotate/ExpandDims_1"
  input: "RoIrotate/stack_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/MatMul"
  op: "BatchMatMul"
  input: "RoIrotate/Reshape"
  input: "RoIrotate/Tile_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "RoIrotate/Reshape_3/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RoIrotate/Reshape_3/shape"
  op: "Pack"
  input: "RoIrotate/strided_slice_6"
  input: "RoIrotate/Reshape_3/shape/1"
  input: "RoIrotate/strided_slice_4"
  input: "RoIrotate/strided_slice_5"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/Reshape_3"
  op: "Reshape"
  input: "RoIrotate/MatMul"
  input: "RoIrotate/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_7"
  op: "StridedSlice"
  input: "RoIrotate/Reshape_3"
  input: "RoIrotate/strided_slice_7/stack"
  input: "RoIrotate/strided_slice_7/stack_1"
  input: "RoIrotate/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "RoIrotate/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_8"
  op: "StridedSlice"
  input: "RoIrotate/Reshape_3"
  input: "RoIrotate/strided_slice_8/stack"
  input: "RoIrotate/strided_slice_8/stack_1"
  input: "RoIrotate/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "RoIrotate/Shape_6"
  op: "Shape"
  input: "RoIrotate/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/strided_slice_9/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_9/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_9/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_9"
  op: "StridedSlice"
  input: "RoIrotate/Shape_6"
  input: "RoIrotate/strided_slice_9/stack"
  input: "RoIrotate/strided_slice_9/stack_1"
  input: "RoIrotate/strided_slice_9/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/Shape_7"
  op: "Shape"
  input: "RoIrotate/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/strided_slice_10/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_10/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_10/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_10"
  op: "StridedSlice"
  input: "RoIrotate/Shape_7"
  input: "RoIrotate/strided_slice_10/stack"
  input: "RoIrotate/strided_slice_10/stack_1"
  input: "RoIrotate/strided_slice_10/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/sub"
  op: "Sub"
  input: "RoIrotate/strided_slice_9"
  input: "RoIrotate/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/sub_1"
  op: "Sub"
  input: "RoIrotate/strided_slice_10"
  input: "RoIrotate/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/Floor"
  op: "Floor"
  input: "RoIrotate/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/Cast_3"
  op: "Cast"
  input: "RoIrotate/Floor"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "RoIrotate/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/add_1"
  op: "Add"
  input: "RoIrotate/Cast_3"
  input: "RoIrotate/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/Floor_1"
  op: "Floor"
  input: "RoIrotate/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/Cast_4"
  op: "Cast"
  input: "RoIrotate/Floor_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "RoIrotate/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/add_2"
  op: "Add"
  input: "RoIrotate/Cast_4"
  input: "RoIrotate/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/clip_by_value/Minimum"
  op: "Minimum"
  input: "RoIrotate/Cast_3"
  input: "RoIrotate/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/clip_by_value"
  op: "Maximum"
  input: "RoIrotate/clip_by_value/Minimum"
  input: "RoIrotate/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "RoIrotate/add_1"
  input: "RoIrotate/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/clip_by_value_1"
  op: "Maximum"
  input: "RoIrotate/clip_by_value_1/Minimum"
  input: "RoIrotate/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "RoIrotate/Cast_4"
  input: "RoIrotate/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/clip_by_value_2"
  op: "Maximum"
  input: "RoIrotate/clip_by_value_2/Minimum"
  input: "RoIrotate/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/clip_by_value_3/Minimum"
  op: "Minimum"
  input: "RoIrotate/add_2"
  input: "RoIrotate/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/clip_by_value_3"
  op: "Maximum"
  input: "RoIrotate/clip_by_value_3/Minimum"
  input: "RoIrotate/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/Shape_8"
  op: "Shape"
  input: "RoIrotate/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/strided_slice_11/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_11/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_11/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_11"
  op: "StridedSlice"
  input: "RoIrotate/Shape_8"
  input: "RoIrotate/strided_slice_11/stack"
  input: "RoIrotate/strided_slice_11/stack_1"
  input: "RoIrotate/strided_slice_11/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/strided_slice_12/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_12/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_12/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_12"
  op: "StridedSlice"
  input: "RoIrotate/Shape_8"
  input: "RoIrotate/strided_slice_12/stack"
  input: "RoIrotate/strided_slice_12/stack_1"
  input: "RoIrotate/strided_slice_12/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/strided_slice_13/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_13/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_13/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_13"
  op: "StridedSlice"
  input: "RoIrotate/Shape_8"
  input: "RoIrotate/strided_slice_13/stack"
  input: "RoIrotate/strided_slice_13/stack_1"
  input: "RoIrotate/strided_slice_13/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/range"
  op: "Range"
  input: "RoIrotate/range/start"
  input: "RoIrotate/strided_slice_11"
  input: "RoIrotate/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/Reshape_4/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/Reshape_4/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/Reshape_4/shape"
  op: "Pack"
  input: "RoIrotate/strided_slice_11"
  input: "RoIrotate/Reshape_4/shape/1"
  input: "RoIrotate/Reshape_4/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/Reshape_4"
  op: "Reshape"
  input: "RoIrotate/range"
  input: "RoIrotate/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/Tile_2/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/Tile_2/multiples"
  op: "Pack"
  input: "RoIrotate/Tile_2/multiples/0"
  input: "RoIrotate/strided_slice_12"
  input: "RoIrotate/strided_slice_13"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/Tile_2"
  op: "Tile"
  input: "RoIrotate/Reshape_4"
  input: "RoIrotate/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/stack_2"
  op: "Pack"
  input: "RoIrotate/Tile_2"
  input: "RoIrotate/clip_by_value_2"
  input: "RoIrotate/clip_by_value"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "RoIrotate/GatherNd"
  op: "GatherNd"
  input: "RoIrotate/concat"
  input: "RoIrotate/stack_2"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/Shape_9"
  op: "Shape"
  input: "RoIrotate/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/strided_slice_14/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_14/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_14/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_14"
  op: "StridedSlice"
  input: "RoIrotate/Shape_9"
  input: "RoIrotate/strided_slice_14/stack"
  input: "RoIrotate/strided_slice_14/stack_1"
  input: "RoIrotate/strided_slice_14/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/strided_slice_15/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_15/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_15/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_15"
  op: "StridedSlice"
  input: "RoIrotate/Shape_9"
  input: "RoIrotate/strided_slice_15/stack"
  input: "RoIrotate/strided_slice_15/stack_1"
  input: "RoIrotate/strided_slice_15/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/strided_slice_16/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_16/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_16/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_16"
  op: "StridedSlice"
  input: "RoIrotate/Shape_9"
  input: "RoIrotate/strided_slice_16/stack"
  input: "RoIrotate/strided_slice_16/stack_1"
  input: "RoIrotate/strided_slice_16/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/range_1"
  op: "Range"
  input: "RoIrotate/range_1/start"
  input: "RoIrotate/strided_slice_14"
  input: "RoIrotate/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/Reshape_5/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/Reshape_5/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/Reshape_5/shape"
  op: "Pack"
  input: "RoIrotate/strided_slice_14"
  input: "RoIrotate/Reshape_5/shape/1"
  input: "RoIrotate/Reshape_5/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/Reshape_5"
  op: "Reshape"
  input: "RoIrotate/range_1"
  input: "RoIrotate/Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/Tile_3/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/Tile_3/multiples"
  op: "Pack"
  input: "RoIrotate/Tile_3/multiples/0"
  input: "RoIrotate/strided_slice_15"
  input: "RoIrotate/strided_slice_16"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/Tile_3"
  op: "Tile"
  input: "RoIrotate/Reshape_5"
  input: "RoIrotate/Tile_3/multiples"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/stack_3"
  op: "Pack"
  input: "RoIrotate/Tile_3"
  input: "RoIrotate/clip_by_value_3"
  input: "RoIrotate/clip_by_value"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "RoIrotate/GatherNd_1"
  op: "GatherNd"
  input: "RoIrotate/concat"
  input: "RoIrotate/stack_3"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/Shape_10"
  op: "Shape"
  input: "RoIrotate/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/strided_slice_17/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_17/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_17/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_17"
  op: "StridedSlice"
  input: "RoIrotate/Shape_10"
  input: "RoIrotate/strided_slice_17/stack"
  input: "RoIrotate/strided_slice_17/stack_1"
  input: "RoIrotate/strided_slice_17/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/strided_slice_18/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_18/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_18/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_18"
  op: "StridedSlice"
  input: "RoIrotate/Shape_10"
  input: "RoIrotate/strided_slice_18/stack"
  input: "RoIrotate/strided_slice_18/stack_1"
  input: "RoIrotate/strided_slice_18/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/strided_slice_19/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_19/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_19/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_19"
  op: "StridedSlice"
  input: "RoIrotate/Shape_10"
  input: "RoIrotate/strided_slice_19/stack"
  input: "RoIrotate/strided_slice_19/stack_1"
  input: "RoIrotate/strided_slice_19/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/range_2"
  op: "Range"
  input: "RoIrotate/range_2/start"
  input: "RoIrotate/strided_slice_17"
  input: "RoIrotate/range_2/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/Reshape_6/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/Reshape_6/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/Reshape_6/shape"
  op: "Pack"
  input: "RoIrotate/strided_slice_17"
  input: "RoIrotate/Reshape_6/shape/1"
  input: "RoIrotate/Reshape_6/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/Reshape_6"
  op: "Reshape"
  input: "RoIrotate/range_2"
  input: "RoIrotate/Reshape_6/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/Tile_4/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/Tile_4/multiples"
  op: "Pack"
  input: "RoIrotate/Tile_4/multiples/0"
  input: "RoIrotate/strided_slice_18"
  input: "RoIrotate/strided_slice_19"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/Tile_4"
  op: "Tile"
  input: "RoIrotate/Reshape_6"
  input: "RoIrotate/Tile_4/multiples"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/stack_4"
  op: "Pack"
  input: "RoIrotate/Tile_4"
  input: "RoIrotate/clip_by_value_2"
  input: "RoIrotate/clip_by_value_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "RoIrotate/GatherNd_2"
  op: "GatherNd"
  input: "RoIrotate/concat"
  input: "RoIrotate/stack_4"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/Shape_11"
  op: "Shape"
  input: "RoIrotate/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/strided_slice_20/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_20/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_20/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_20"
  op: "StridedSlice"
  input: "RoIrotate/Shape_11"
  input: "RoIrotate/strided_slice_20/stack"
  input: "RoIrotate/strided_slice_20/stack_1"
  input: "RoIrotate/strided_slice_20/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/strided_slice_21/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_21/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_21/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_21"
  op: "StridedSlice"
  input: "RoIrotate/Shape_11"
  input: "RoIrotate/strided_slice_21/stack"
  input: "RoIrotate/strided_slice_21/stack_1"
  input: "RoIrotate/strided_slice_21/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/strided_slice_22/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_22/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_22/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_22"
  op: "StridedSlice"
  input: "RoIrotate/Shape_11"
  input: "RoIrotate/strided_slice_22/stack"
  input: "RoIrotate/strided_slice_22/stack_1"
  input: "RoIrotate/strided_slice_22/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/range_3"
  op: "Range"
  input: "RoIrotate/range_3/start"
  input: "RoIrotate/strided_slice_20"
  input: "RoIrotate/range_3/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/Reshape_7/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/Reshape_7/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/Reshape_7/shape"
  op: "Pack"
  input: "RoIrotate/strided_slice_20"
  input: "RoIrotate/Reshape_7/shape/1"
  input: "RoIrotate/Reshape_7/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/Reshape_7"
  op: "Reshape"
  input: "RoIrotate/range_3"
  input: "RoIrotate/Reshape_7/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/Tile_5/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/Tile_5/multiples"
  op: "Pack"
  input: "RoIrotate/Tile_5/multiples/0"
  input: "RoIrotate/strided_slice_21"
  input: "RoIrotate/strided_slice_22"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/Tile_5"
  op: "Tile"
  input: "RoIrotate/Reshape_7"
  input: "RoIrotate/Tile_5/multiples"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/stack_5"
  op: "Pack"
  input: "RoIrotate/Tile_5"
  input: "RoIrotate/clip_by_value_3"
  input: "RoIrotate/clip_by_value_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "RoIrotate/GatherNd_3"
  op: "GatherNd"
  input: "RoIrotate/concat"
  input: "RoIrotate/stack_5"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/Cast_5"
  op: "Cast"
  input: "RoIrotate/clip_by_value"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "RoIrotate/Cast_6"
  op: "Cast"
  input: "RoIrotate/clip_by_value_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "RoIrotate/Cast_7"
  op: "Cast"
  input: "RoIrotate/clip_by_value_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "RoIrotate/Cast_8"
  op: "Cast"
  input: "RoIrotate/clip_by_value_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "RoIrotate/sub_2"
  op: "Sub"
  input: "RoIrotate/Cast_6"
  input: "RoIrotate/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/sub_3"
  op: "Sub"
  input: "RoIrotate/Cast_8"
  input: "RoIrotate/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/mul_2"
  op: "Mul"
  input: "RoIrotate/sub_2"
  input: "RoIrotate/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/sub_4"
  op: "Sub"
  input: "RoIrotate/Cast_6"
  input: "RoIrotate/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/sub_5"
  op: "Sub"
  input: "RoIrotate/strided_slice_8"
  input: "RoIrotate/Cast_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/mul_3"
  op: "Mul"
  input: "RoIrotate/sub_4"
  input: "RoIrotate/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/sub_6"
  op: "Sub"
  input: "RoIrotate/strided_slice_7"
  input: "RoIrotate/Cast_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/sub_7"
  op: "Sub"
  input: "RoIrotate/Cast_8"
  input: "RoIrotate/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/mul_4"
  op: "Mul"
  input: "RoIrotate/sub_6"
  input: "RoIrotate/sub_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/sub_8"
  op: "Sub"
  input: "RoIrotate/strided_slice_7"
  input: "RoIrotate/Cast_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/sub_9"
  op: "Sub"
  input: "RoIrotate/strided_slice_8"
  input: "RoIrotate/Cast_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/mul_5"
  op: "Mul"
  input: "RoIrotate/sub_8"
  input: "RoIrotate/sub_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "RoIrotate/ExpandDims_2"
  op: "ExpandDims"
  input: "RoIrotate/mul_2"
  input: "RoIrotate/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "RoIrotate/ExpandDims_3"
  op: "ExpandDims"
  input: "RoIrotate/mul_3"
  input: "RoIrotate/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/ExpandDims_4/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "RoIrotate/ExpandDims_4"
  op: "ExpandDims"
  input: "RoIrotate/mul_4"
  input: "RoIrotate/ExpandDims_4/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/ExpandDims_5/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "RoIrotate/ExpandDims_5"
  op: "ExpandDims"
  input: "RoIrotate/mul_5"
  input: "RoIrotate/ExpandDims_5/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/mul_6"
  op: "Mul"
  input: "RoIrotate/ExpandDims_2"
  input: "RoIrotate/GatherNd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/mul_7"
  op: "Mul"
  input: "RoIrotate/ExpandDims_3"
  input: "RoIrotate/GatherNd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/mul_8"
  op: "Mul"
  input: "RoIrotate/ExpandDims_4"
  input: "RoIrotate/GatherNd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/mul_9"
  op: "Mul"
  input: "RoIrotate/ExpandDims_5"
  input: "RoIrotate/GatherNd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/AddN"
  op: "AddN"
  input: "RoIrotate/mul_6"
  input: "RoIrotate/mul_7"
  input: "RoIrotate/mul_8"
  input: "RoIrotate/mul_9"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/Shape_12"
  op: "Shape"
  input: "input_box_widths"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/strided_slice_23/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_23/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_23/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_23"
  op: "StridedSlice"
  input: "RoIrotate/Shape_12"
  input: "RoIrotate/strided_slice_23/stack"
  input: "RoIrotate/strided_slice_23/stack_1"
  input: "RoIrotate/strided_slice_23/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/TensorArray"
  op: "TensorArrayV3"
  input: "RoIrotate/strided_slice_23"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RoIrotate/while/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/while/Enter"
  op: "Enter"
  input: "RoIrotate/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RoIrotate/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "RoIrotate/while/Enter_1"
  op: "Enter"
  input: "RoIrotate/while/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RoIrotate/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "RoIrotate/while/Merge"
  op: "Merge"
  input: "RoIrotate/while/Enter"
  input: "RoIrotate/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/while/Merge_1"
  op: "Merge"
  input: "RoIrotate/while/Enter_1"
  input: "RoIrotate/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/while/Less"
  op: "Less"
  input: "RoIrotate/while/Merge_1"
  input: "RoIrotate/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/while/Less/Enter"
  op: "Enter"
  input: "RoIrotate/strided_slice_23"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RoIrotate/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "RoIrotate/while/LoopCond"
  op: "LoopCond"
  input: "RoIrotate/while/Less"
}
node {
  name: "RoIrotate/while/Switch"
  op: "Switch"
  input: "RoIrotate/while/Merge"
  input: "RoIrotate/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RoIrotate/while/Merge"
      }
    }
  }
}
node {
  name: "RoIrotate/while/Switch_1"
  op: "Switch"
  input: "RoIrotate/while/Merge_1"
  input: "RoIrotate/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RoIrotate/while/Merge_1"
      }
    }
  }
}
node {
  name: "RoIrotate/while/Identity"
  op: "Identity"
  input: "RoIrotate/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/while/Identity_1"
  op: "Identity"
  input: "RoIrotate/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/while/add/y"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/while/add"
  op: "Add"
  input: "RoIrotate/while/Identity_1"
  input: "RoIrotate/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/while/strided_slice/stack"
  op: "Pack"
  input: "RoIrotate/while/Identity_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/while/strided_slice/stack_1"
  op: "Pack"
  input: "RoIrotate/while/add"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/while/strided_slice/stack_2"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/while/strided_slice"
  op: "StridedSlice"
  input: "RoIrotate/while/strided_slice/Enter"
  input: "RoIrotate/while/strided_slice/stack"
  input: "RoIrotate/while/strided_slice/stack_1"
  input: "RoIrotate/while/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/while/strided_slice/Enter"
  op: "Enter"
  input: "RoIrotate/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RoIrotate/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "RoIrotate/while/add_1/y"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/while/add_1"
  op: "Add"
  input: "RoIrotate/while/Identity_1"
  input: "RoIrotate/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/while/strided_slice_1/stack"
  op: "Pack"
  input: "RoIrotate/while/Identity_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/while/strided_slice_1/stack_1"
  op: "Pack"
  input: "RoIrotate/while/add_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/while/strided_slice_1/stack_2"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/while/strided_slice_1"
  op: "StridedSlice"
  input: "RoIrotate/while/strided_slice_1/Enter"
  input: "RoIrotate/while/strided_slice_1/stack"
  input: "RoIrotate/while/strided_slice_1/stack_1"
  input: "RoIrotate/while/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RoIrotate/while/strided_slice_1/Enter"
  op: "Enter"
  input: "input_box_widths"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RoIrotate/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/ExpandDims/dim"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/ExpandDims"
  op: "ExpandDims"
  input: "RoIrotate/while/strided_slice"
  input: "RoIrotate/while/crop_to_bounding_box/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/Shape"
  op: "Shape"
  input: "RoIrotate/while/crop_to_bounding_box/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/assert_positive/Const"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/assert_positive/assert_less/Less"
  op: "Less"
  input: "RoIrotate/while/crop_to_bounding_box/assert_positive/Const"
  input: "RoIrotate/while/crop_to_bounding_box/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/assert_positive/assert_less/Const"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/assert_positive/assert_less/All"
  op: "All"
  input: "RoIrotate/while/crop_to_bounding_box/assert_positive/assert_less/Less"
  input: "RoIrotate/while/crop_to_bounding_box/assert_positive/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/assert_positive/assert_less/Assert/Const"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "all dims of \'image.shape\' must be > 0."
      }
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/assert_positive/assert_less/Assert/Assert/data_0"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "all dims of \'image.shape\' must be > 0."
      }
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/assert_positive/assert_less/Assert/Assert"
  op: "Assert"
  input: "RoIrotate/while/crop_to_bounding_box/assert_positive/assert_less/All"
  input: "RoIrotate/while/crop_to_bounding_box/assert_positive/assert_less/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/Shape_1"
  op: "Shape"
  input: "RoIrotate/while/crop_to_bounding_box/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/unstack"
  op: "Unpack"
  input: "RoIrotate/while/crop_to_bounding_box/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/GreaterEqual/y"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/GreaterEqual"
  op: "GreaterEqual"
  input: "RoIrotate/while/crop_to_bounding_box/unstack:2"
  input: "RoIrotate/while/crop_to_bounding_box/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/Assert/Const"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "width must be >= target + offset."
      }
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/Assert/Assert/data_0"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "width must be >= target + offset."
      }
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/Assert/Assert"
  op: "Assert"
  input: "RoIrotate/while/crop_to_bounding_box/GreaterEqual"
  input: "RoIrotate/while/crop_to_bounding_box/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/GreaterEqual_1/y"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/GreaterEqual_1"
  op: "GreaterEqual"
  input: "RoIrotate/while/crop_to_bounding_box/unstack:1"
  input: "RoIrotate/while/crop_to_bounding_box/GreaterEqual_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/Assert_1/Const"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "height must be >= target + offset."
      }
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/Assert_1/Assert/data_0"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "height must be >= target + offset."
      }
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/Assert_1/Assert"
  op: "Assert"
  input: "RoIrotate/while/crop_to_bounding_box/GreaterEqual_1"
  input: "RoIrotate/while/crop_to_bounding_box/Assert_1/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/control_dependency"
  op: "Identity"
  input: "RoIrotate/while/crop_to_bounding_box/ExpandDims"
  input: "^RoIrotate/while/crop_to_bounding_box/Assert/Assert"
  input: "^RoIrotate/while/crop_to_bounding_box/Assert_1/Assert"
  input: "^RoIrotate/while/crop_to_bounding_box/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RoIrotate/while/crop_to_bounding_box/ExpandDims"
      }
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/stack"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/stack_1"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\020\000\000\000\020\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/Slice"
  op: "Slice"
  input: "RoIrotate/while/crop_to_bounding_box/control_dependency"
  input: "RoIrotate/while/crop_to_bounding_box/stack"
  input: "RoIrotate/while/crop_to_bounding_box/stack_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/while/crop_to_bounding_box/Squeeze"
  op: "Squeeze"
  input: "RoIrotate/while/crop_to_bounding_box/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "RoIrotate/while/pad_to_bounding_box/ExpandDims/dim"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/while/pad_to_bounding_box/ExpandDims"
  op: "ExpandDims"
  input: "RoIrotate/while/crop_to_bounding_box/Squeeze"
  input: "RoIrotate/while/pad_to_bounding_box/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/while/pad_to_bounding_box/control_dependency"
  op: "Identity"
  input: "RoIrotate/while/pad_to_bounding_box/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RoIrotate/while/pad_to_bounding_box/ExpandDims"
      }
    }
  }
}
node {
  name: "RoIrotate/while/pad_to_bounding_box/stack"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RoIrotate/while/pad_to_bounding_box/Reshape/shape"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "RoIrotate/while/pad_to_bounding_box/Reshape"
  op: "Reshape"
  input: "RoIrotate/while/pad_to_bounding_box/stack"
  input: "RoIrotate/while/pad_to_bounding_box/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/while/pad_to_bounding_box/Pad"
  op: "Pad"
  input: "RoIrotate/while/pad_to_bounding_box/control_dependency"
  input: "RoIrotate/while/pad_to_bounding_box/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/while/pad_to_bounding_box/Squeeze"
  op: "Squeeze"
  input: "RoIrotate/while/pad_to_bounding_box/Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "RoIrotate/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "RoIrotate/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "RoIrotate/while/Identity_1"
  input: "RoIrotate/while/pad_to_bounding_box/Squeeze"
  input: "RoIrotate/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RoIrotate/while/pad_to_bounding_box/Squeeze"
      }
    }
  }
}
node {
  name: "RoIrotate/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "RoIrotate/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RoIrotate/while/pad_to_bounding_box/Squeeze"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RoIrotate/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "RoIrotate/while/add_2/y"
  op: "Const"
  input: "^RoIrotate/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/while/add_2"
  op: "Add"
  input: "RoIrotate/while/Identity_1"
  input: "RoIrotate/while/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/while/NextIteration"
  op: "NextIteration"
  input: "RoIrotate/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/while/NextIteration_1"
  op: "NextIteration"
  input: "RoIrotate/while/add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/while/Exit"
  op: "Exit"
  input: "RoIrotate/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RoIrotate/while/Exit_1"
  op: "Exit"
  input: "RoIrotate/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RoIrotate/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "RoIrotate/TensorArray"
  input: "RoIrotate/while/Exit"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RoIrotate/TensorArray"
      }
    }
  }
}
node {
  name: "RoIrotate/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RoIrotate/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RoIrotate/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RoIrotate/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/TensorArrayStack/range"
  op: "Range"
  input: "RoIrotate/TensorArrayStack/range/start"
  input: "RoIrotate/TensorArrayStack/TensorArraySizeV3"
  input: "RoIrotate/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RoIrotate/TensorArray"
      }
    }
  }
}
node {
  name: "RoIrotate/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "RoIrotate/TensorArray"
  input: "RoIrotate/TensorArrayStack/range"
  input: "RoIrotate/while/Exit"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RoIrotate/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_24/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_24/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_24/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_24"
  op: "StridedSlice"
  input: "RoIrotate/TensorArrayStack/TensorArrayGatherV3"
  input: "RoIrotate/strided_slice_24/stack"
  input: "RoIrotate/strided_slice_24/stack_1"
  input: "RoIrotate/strided_slice_24/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/strided_slice_25/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_25/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_25/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "RoIrotate/strided_slice_25"
  op: "StridedSlice"
  input: "RoIrotate/TensorArrayStack/TensorArrayGatherV3"
  input: "RoIrotate/strided_slice_25/stack"
  input: "RoIrotate/strided_slice_25/stack_1"
  input: "RoIrotate/strided_slice_25/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 14
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "RoIrotate/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RoIrotate/concat_1"
  op: "ConcatV2"
  input: "RoIrotate/strided_slice_24"
  input: "RoIrotate/strided_slice_25"
  input: "RoIrotate/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "part/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "part/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "part/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "part/strided_slice"
  op: "StridedSlice"
  input: "RoIrotate/concat_1"
  input: "part/strided_slice/stack"
  input: "part/strided_slice/stack_1"
  input: "part/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "part/recog/part_0_fc/Flatten/flatten/Shape"
  op: "Shape"
  input: "part/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "part/recog/part_0_fc/Flatten/flatten/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "part/recog/part_0_fc/Flatten/flatten/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "part/recog/part_0_fc/Flatten/flatten/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "part/recog/part_0_fc/Flatten/flatten/strided_slice"
  op: "StridedSlice"
  input: "part/recog/part_0_fc/Flatten/flatten/Shape"
  input: "part/recog/part_0_fc/Flatten/flatten/strided_slice/stack"
  input: "part/recog/part_0_fc/Flatten/flatten/strided_slice/stack_1"
  input: "part/recog/part_0_fc/Flatten/flatten/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "part/recog/part_0_fc/Flatten/flatten/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "part/recog/part_0_fc/Flatten/flatten/Reshape/shape"
  op: "Pack"
  input: "part/recog/part_0_fc/Flatten/flatten/strided_slice"
  input: "part/recog/part_0_fc/Flatten/flatten/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "part/recog/part_0_fc/Flatten/flatten/Reshape"
  op: "Reshape"
  input: "part/strided_slice"
  input: "part/recog/part_0_fc/Flatten/flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "recog/part_0_fc/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "recog/part_0_fc/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03423266112804413
      }
    }
  }
}
node {
  name: "recog/part_0_fc/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03423266112804413
      }
    }
  }
}
node {
  name: "recog/part_0_fc/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "recog/part_0_fc/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "recog/part_0_fc/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "recog/part_0_fc/dense/kernel/Initializer/random_uniform/max"
  input: "recog/part_0_fc/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense/kernel"
      }
    }
  }
}
node {
  name: "recog/part_0_fc/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "recog/part_0_fc/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "recog/part_0_fc/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense/kernel"
      }
    }
  }
}
node {
  name: "recog/part_0_fc/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "recog/part_0_fc/dense/kernel/Initializer/random_uniform/mul"
  input: "recog/part_0_fc/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense/kernel"
      }
    }
  }
}
node {
  name: "recog/part_0_fc/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "recog/part_0_fc/dense/kernel/Assign"
  op: "Assign"
  input: "recog/part_0_fc/dense/kernel"
  input: "recog/part_0_fc/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "recog/part_0_fc/dense/kernel/read"
  op: "Identity"
  input: "recog/part_0_fc/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense/kernel"
      }
    }
  }
}
node {
  name: "recog/part_0_fc/dense/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "recog/part_0_fc/dense/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recog/part_0_fc/dense/bias/Initializer/zeros"
  op: "Fill"
  input: "recog/part_0_fc/dense/bias/Initializer/zeros/shape_as_tensor"
  input: "recog/part_0_fc/dense/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "recog/part_0_fc/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "recog/part_0_fc/dense/bias/Assign"
  op: "Assign"
  input: "recog/part_0_fc/dense/bias"
  input: "recog/part_0_fc/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "recog/part_0_fc/dense/bias/read"
  op: "Identity"
  input: "recog/part_0_fc/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense/bias"
      }
    }
  }
}
node {
  name: "part/recog/part_0_fc/dense/MatMul"
  op: "MatMul"
  input: "part/recog/part_0_fc/Flatten/flatten/Reshape"
  input: "recog/part_0_fc/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "part/recog/part_0_fc/dense/BiasAdd"
  op: "BiasAdd"
  input: "part/recog/part_0_fc/dense/MatMul"
  input: "recog/part_0_fc/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "part/recog/part_0_fc/dropout/Identity"
  op: "Identity"
  input: "part/recog/part_0_fc/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recog/part_0_fc/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\346\000\000\000"
      }
    }
  }
}
node {
  name: "recog/part_0_fc/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06917144358158112
      }
    }
  }
}
node {
  name: "recog/part_0_fc/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06917144358158112
      }
    }
  }
}
node {
  name: "recog/part_0_fc/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "recog/part_0_fc/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "recog/part_0_fc/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "recog/part_0_fc/dense_1/kernel/Initializer/random_uniform/max"
  input: "recog/part_0_fc/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense_1/kernel"
      }
    }
  }
}
node {
  name: "recog/part_0_fc/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "recog/part_0_fc/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "recog/part_0_fc/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense_1/kernel"
      }
    }
  }
}
node {
  name: "recog/part_0_fc/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "recog/part_0_fc/dense_1/kernel/Initializer/random_uniform/mul"
  input: "recog/part_0_fc/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense_1/kernel"
      }
    }
  }
}
node {
  name: "recog/part_0_fc/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 230
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "recog/part_0_fc/dense_1/kernel/Assign"
  op: "Assign"
  input: "recog/part_0_fc/dense_1/kernel"
  input: "recog/part_0_fc/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "recog/part_0_fc/dense_1/kernel/read"
  op: "Identity"
  input: "recog/part_0_fc/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense_1/kernel"
      }
    }
  }
}
node {
  name: "recog/part_0_fc/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 230
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recog/part_0_fc/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 230
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "recog/part_0_fc/dense_1/bias/Assign"
  op: "Assign"
  input: "recog/part_0_fc/dense_1/bias"
  input: "recog/part_0_fc/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "recog/part_0_fc/dense_1/bias/read"
  op: "Identity"
  input: "recog/part_0_fc/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense_1/bias"
      }
    }
  }
}
node {
  name: "part/recog/part_0_fc/dense_1/MatMul"
  op: "MatMul"
  input: "part/recog/part_0_fc/dropout/Identity"
  input: "recog/part_0_fc/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "part/recog/part_0_fc/dense_1/BiasAdd"
  op: "BiasAdd"
  input: "part/recog/part_0_fc/dense_1/MatMul"
  input: "recog/part_0_fc/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "part/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "part/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\020\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "part/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "part/strided_slice_1"
  op: "StridedSlice"
  input: "RoIrotate/concat_1"
  input: "part/strided_slice_1/stack"
  input: "part/strided_slice_1/stack_1"
  input: "part/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "part/recog/part_1_fc/Flatten/flatten/Shape"
  op: "Shape"
  input: "part/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "part/recog/part_1_fc/Flatten/flatten/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "part/recog/part_1_fc/Flatten/flatten/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "part/recog/part_1_fc/Flatten/flatten/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "part/recog/part_1_fc/Flatten/flatten/strided_slice"
  op: "StridedSlice"
  input: "part/recog/part_1_fc/Flatten/flatten/Shape"
  input: "part/recog/part_1_fc/Flatten/flatten/strided_slice/stack"
  input: "part/recog/part_1_fc/Flatten/flatten/strided_slice/stack_1"
  input: "part/recog/part_1_fc/Flatten/flatten/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "part/recog/part_1_fc/Flatten/flatten/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "part/recog/part_1_fc/Flatten/flatten/Reshape/shape"
  op: "Pack"
  input: "part/recog/part_1_fc/Flatten/flatten/strided_slice"
  input: "part/recog/part_1_fc/Flatten/flatten/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "part/recog/part_1_fc/Flatten/flatten/Reshape"
  op: "Reshape"
  input: "part/strided_slice_1"
  input: "part/recog/part_1_fc/Flatten/flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "recog/part_1_fc/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "recog/part_1_fc/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03423266112804413
      }
    }
  }
}
node {
  name: "recog/part_1_fc/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03423266112804413
      }
    }
  }
}
node {
  name: "recog/part_1_fc/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "recog/part_1_fc/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "recog/part_1_fc/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "recog/part_1_fc/dense/kernel/Initializer/random_uniform/max"
  input: "recog/part_1_fc/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense/kernel"
      }
    }
  }
}
node {
  name: "recog/part_1_fc/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "recog/part_1_fc/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "recog/part_1_fc/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense/kernel"
      }
    }
  }
}
node {
  name: "recog/part_1_fc/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "recog/part_1_fc/dense/kernel/Initializer/random_uniform/mul"
  input: "recog/part_1_fc/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense/kernel"
      }
    }
  }
}
node {
  name: "recog/part_1_fc/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "recog/part_1_fc/dense/kernel/Assign"
  op: "Assign"
  input: "recog/part_1_fc/dense/kernel"
  input: "recog/part_1_fc/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "recog/part_1_fc/dense/kernel/read"
  op: "Identity"
  input: "recog/part_1_fc/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense/kernel"
      }
    }
  }
}
node {
  name: "recog/part_1_fc/dense/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "recog/part_1_fc/dense/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recog/part_1_fc/dense/bias/Initializer/zeros"
  op: "Fill"
  input: "recog/part_1_fc/dense/bias/Initializer/zeros/shape_as_tensor"
  input: "recog/part_1_fc/dense/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "recog/part_1_fc/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "recog/part_1_fc/dense/bias/Assign"
  op: "Assign"
  input: "recog/part_1_fc/dense/bias"
  input: "recog/part_1_fc/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "recog/part_1_fc/dense/bias/read"
  op: "Identity"
  input: "recog/part_1_fc/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense/bias"
      }
    }
  }
}
node {
  name: "part/recog/part_1_fc/dense/MatMul"
  op: "MatMul"
  input: "part/recog/part_1_fc/Flatten/flatten/Reshape"
  input: "recog/part_1_fc/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "part/recog/part_1_fc/dense/BiasAdd"
  op: "BiasAdd"
  input: "part/recog/part_1_fc/dense/MatMul"
  input: "recog/part_1_fc/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "part/recog/part_1_fc/dropout/Identity"
  op: "Identity"
  input: "part/recog/part_1_fc/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recog/part_1_fc/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\346\000\000\000"
      }
    }
  }
}
node {
  name: "recog/part_1_fc/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06917144358158112
      }
    }
  }
}
node {
  name: "recog/part_1_fc/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06917144358158112
      }
    }
  }
}
node {
  name: "recog/part_1_fc/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "recog/part_1_fc/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "recog/part_1_fc/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "recog/part_1_fc/dense_1/kernel/Initializer/random_uniform/max"
  input: "recog/part_1_fc/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense_1/kernel"
      }
    }
  }
}
node {
  name: "recog/part_1_fc/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "recog/part_1_fc/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "recog/part_1_fc/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense_1/kernel"
      }
    }
  }
}
node {
  name: "recog/part_1_fc/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "recog/part_1_fc/dense_1/kernel/Initializer/random_uniform/mul"
  input: "recog/part_1_fc/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense_1/kernel"
      }
    }
  }
}
node {
  name: "recog/part_1_fc/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 230
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "recog/part_1_fc/dense_1/kernel/Assign"
  op: "Assign"
  input: "recog/part_1_fc/dense_1/kernel"
  input: "recog/part_1_fc/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "recog/part_1_fc/dense_1/kernel/read"
  op: "Identity"
  input: "recog/part_1_fc/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense_1/kernel"
      }
    }
  }
}
node {
  name: "recog/part_1_fc/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 230
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recog/part_1_fc/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 230
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "recog/part_1_fc/dense_1/bias/Assign"
  op: "Assign"
  input: "recog/part_1_fc/dense_1/bias"
  input: "recog/part_1_fc/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "recog/part_1_fc/dense_1/bias/read"
  op: "Identity"
  input: "recog/part_1_fc/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense_1/bias"
      }
    }
  }
}
node {
  name: "part/recog/part_1_fc/dense_1/MatMul"
  op: "MatMul"
  input: "part/recog/part_1_fc/dropout/Identity"
  input: "recog/part_1_fc/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "part/recog/part_1_fc/dense_1/BiasAdd"
  op: "BiasAdd"
  input: "part/recog/part_1_fc/dense_1/MatMul"
  input: "recog/part_1_fc/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "part/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\020\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "part/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\030\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "part/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "part/strided_slice_2"
  op: "StridedSlice"
  input: "RoIrotate/concat_1"
  input: "part/strided_slice_2/stack"
  input: "part/strided_slice_2/stack_1"
  input: "part/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "part/recog/part_2_fc/Flatten/flatten/Shape"
  op: "Shape"
  input: "part/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "part/recog/part_2_fc/Flatten/flatten/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "part/recog/part_2_fc/Flatten/flatten/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "part/recog/part_2_fc/Flatten/flatten/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "part/recog/part_2_fc/Flatten/flatten/strided_slice"
  op: "StridedSlice"
  input: "part/recog/part_2_fc/Flatten/flatten/Shape"
  input: "part/recog/part_2_fc/Flatten/flatten/strided_slice/stack"
  input: "part/recog/part_2_fc/Flatten/flatten/strided_slice/stack_1"
  input: "part/recog/part_2_fc/Flatten/flatten/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "part/recog/part_2_fc/Flatten/flatten/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "part/recog/part_2_fc/Flatten/flatten/Reshape/shape"
  op: "Pack"
  input: "part/recog/part_2_fc/Flatten/flatten/strided_slice"
  input: "part/recog/part_2_fc/Flatten/flatten/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "part/recog/part_2_fc/Flatten/flatten/Reshape"
  op: "Reshape"
  input: "part/strided_slice_2"
  input: "part/recog/part_2_fc/Flatten/flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "recog/part_2_fc/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "recog/part_2_fc/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03423266112804413
      }
    }
  }
}
node {
  name: "recog/part_2_fc/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03423266112804413
      }
    }
  }
}
node {
  name: "recog/part_2_fc/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "recog/part_2_fc/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "recog/part_2_fc/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "recog/part_2_fc/dense/kernel/Initializer/random_uniform/max"
  input: "recog/part_2_fc/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense/kernel"
      }
    }
  }
}
node {
  name: "recog/part_2_fc/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "recog/part_2_fc/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "recog/part_2_fc/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense/kernel"
      }
    }
  }
}
node {
  name: "recog/part_2_fc/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "recog/part_2_fc/dense/kernel/Initializer/random_uniform/mul"
  input: "recog/part_2_fc/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense/kernel"
      }
    }
  }
}
node {
  name: "recog/part_2_fc/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "recog/part_2_fc/dense/kernel/Assign"
  op: "Assign"
  input: "recog/part_2_fc/dense/kernel"
  input: "recog/part_2_fc/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "recog/part_2_fc/dense/kernel/read"
  op: "Identity"
  input: "recog/part_2_fc/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense/kernel"
      }
    }
  }
}
node {
  name: "recog/part_2_fc/dense/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "recog/part_2_fc/dense/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recog/part_2_fc/dense/bias/Initializer/zeros"
  op: "Fill"
  input: "recog/part_2_fc/dense/bias/Initializer/zeros/shape_as_tensor"
  input: "recog/part_2_fc/dense/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "recog/part_2_fc/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "recog/part_2_fc/dense/bias/Assign"
  op: "Assign"
  input: "recog/part_2_fc/dense/bias"
  input: "recog/part_2_fc/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "recog/part_2_fc/dense/bias/read"
  op: "Identity"
  input: "recog/part_2_fc/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense/bias"
      }
    }
  }
}
node {
  name: "part/recog/part_2_fc/dense/MatMul"
  op: "MatMul"
  input: "part/recog/part_2_fc/Flatten/flatten/Reshape"
  input: "recog/part_2_fc/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "part/recog/part_2_fc/dense/BiasAdd"
  op: "BiasAdd"
  input: "part/recog/part_2_fc/dense/MatMul"
  input: "recog/part_2_fc/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "part/recog/part_2_fc/dropout/Identity"
  op: "Identity"
  input: "part/recog/part_2_fc/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recog/part_2_fc/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\346\000\000\000"
      }
    }
  }
}
node {
  name: "recog/part_2_fc/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06917144358158112
      }
    }
  }
}
node {
  name: "recog/part_2_fc/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06917144358158112
      }
    }
  }
}
node {
  name: "recog/part_2_fc/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "recog/part_2_fc/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "recog/part_2_fc/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "recog/part_2_fc/dense_1/kernel/Initializer/random_uniform/max"
  input: "recog/part_2_fc/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense_1/kernel"
      }
    }
  }
}
node {
  name: "recog/part_2_fc/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "recog/part_2_fc/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "recog/part_2_fc/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense_1/kernel"
      }
    }
  }
}
node {
  name: "recog/part_2_fc/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "recog/part_2_fc/dense_1/kernel/Initializer/random_uniform/mul"
  input: "recog/part_2_fc/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense_1/kernel"
      }
    }
  }
}
node {
  name: "recog/part_2_fc/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 230
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "recog/part_2_fc/dense_1/kernel/Assign"
  op: "Assign"
  input: "recog/part_2_fc/dense_1/kernel"
  input: "recog/part_2_fc/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "recog/part_2_fc/dense_1/kernel/read"
  op: "Identity"
  input: "recog/part_2_fc/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense_1/kernel"
      }
    }
  }
}
node {
  name: "recog/part_2_fc/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 230
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recog/part_2_fc/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 230
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "recog/part_2_fc/dense_1/bias/Assign"
  op: "Assign"
  input: "recog/part_2_fc/dense_1/bias"
  input: "recog/part_2_fc/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "recog/part_2_fc/dense_1/bias/read"
  op: "Identity"
  input: "recog/part_2_fc/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense_1/bias"
      }
    }
  }
}
node {
  name: "part/recog/part_2_fc/dense_1/MatMul"
  op: "MatMul"
  input: "part/recog/part_2_fc/dropout/Identity"
  input: "recog/part_2_fc/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "part/recog/part_2_fc/dense_1/BiasAdd"
  op: "BiasAdd"
  input: "part/recog/part_2_fc/dense_1/MatMul"
  input: "recog/part_2_fc/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "part/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\030\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "part/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000 \000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "part/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "part/strided_slice_3"
  op: "StridedSlice"
  input: "RoIrotate/concat_1"
  input: "part/strided_slice_3/stack"
  input: "part/strided_slice_3/stack_1"
  input: "part/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "part/recog/part_3_fc/Flatten/flatten/Shape"
  op: "Shape"
  input: "part/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "part/recog/part_3_fc/Flatten/flatten/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "part/recog/part_3_fc/Flatten/flatten/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "part/recog/part_3_fc/Flatten/flatten/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "part/recog/part_3_fc/Flatten/flatten/strided_slice"
  op: "StridedSlice"
  input: "part/recog/part_3_fc/Flatten/flatten/Shape"
  input: "part/recog/part_3_fc/Flatten/flatten/strided_slice/stack"
  input: "part/recog/part_3_fc/Flatten/flatten/strided_slice/stack_1"
  input: "part/recog/part_3_fc/Flatten/flatten/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "part/recog/part_3_fc/Flatten/flatten/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "part/recog/part_3_fc/Flatten/flatten/Reshape/shape"
  op: "Pack"
  input: "part/recog/part_3_fc/Flatten/flatten/strided_slice"
  input: "part/recog/part_3_fc/Flatten/flatten/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "part/recog/part_3_fc/Flatten/flatten/Reshape"
  op: "Reshape"
  input: "part/strided_slice_3"
  input: "part/recog/part_3_fc/Flatten/flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "recog/part_3_fc/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "recog/part_3_fc/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03423266112804413
      }
    }
  }
}
node {
  name: "recog/part_3_fc/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03423266112804413
      }
    }
  }
}
node {
  name: "recog/part_3_fc/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "recog/part_3_fc/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "recog/part_3_fc/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "recog/part_3_fc/dense/kernel/Initializer/random_uniform/max"
  input: "recog/part_3_fc/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense/kernel"
      }
    }
  }
}
node {
  name: "recog/part_3_fc/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "recog/part_3_fc/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "recog/part_3_fc/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense/kernel"
      }
    }
  }
}
node {
  name: "recog/part_3_fc/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "recog/part_3_fc/dense/kernel/Initializer/random_uniform/mul"
  input: "recog/part_3_fc/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense/kernel"
      }
    }
  }
}
node {
  name: "recog/part_3_fc/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "recog/part_3_fc/dense/kernel/Assign"
  op: "Assign"
  input: "recog/part_3_fc/dense/kernel"
  input: "recog/part_3_fc/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "recog/part_3_fc/dense/kernel/read"
  op: "Identity"
  input: "recog/part_3_fc/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense/kernel"
      }
    }
  }
}
node {
  name: "recog/part_3_fc/dense/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "recog/part_3_fc/dense/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recog/part_3_fc/dense/bias/Initializer/zeros"
  op: "Fill"
  input: "recog/part_3_fc/dense/bias/Initializer/zeros/shape_as_tensor"
  input: "recog/part_3_fc/dense/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "recog/part_3_fc/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "recog/part_3_fc/dense/bias/Assign"
  op: "Assign"
  input: "recog/part_3_fc/dense/bias"
  input: "recog/part_3_fc/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "recog/part_3_fc/dense/bias/read"
  op: "Identity"
  input: "recog/part_3_fc/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense/bias"
      }
    }
  }
}
node {
  name: "part/recog/part_3_fc/dense/MatMul"
  op: "MatMul"
  input: "part/recog/part_3_fc/Flatten/flatten/Reshape"
  input: "recog/part_3_fc/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "part/recog/part_3_fc/dense/BiasAdd"
  op: "BiasAdd"
  input: "part/recog/part_3_fc/dense/MatMul"
  input: "recog/part_3_fc/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "part/recog/part_3_fc/dropout/Identity"
  op: "Identity"
  input: "part/recog/part_3_fc/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recog/part_3_fc/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\346\000\000\000"
      }
    }
  }
}
node {
  name: "recog/part_3_fc/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06917144358158112
      }
    }
  }
}
node {
  name: "recog/part_3_fc/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06917144358158112
      }
    }
  }
}
node {
  name: "recog/part_3_fc/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "recog/part_3_fc/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "recog/part_3_fc/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "recog/part_3_fc/dense_1/kernel/Initializer/random_uniform/max"
  input: "recog/part_3_fc/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense_1/kernel"
      }
    }
  }
}
node {
  name: "recog/part_3_fc/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "recog/part_3_fc/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "recog/part_3_fc/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense_1/kernel"
      }
    }
  }
}
node {
  name: "recog/part_3_fc/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "recog/part_3_fc/dense_1/kernel/Initializer/random_uniform/mul"
  input: "recog/part_3_fc/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense_1/kernel"
      }
    }
  }
}
node {
  name: "recog/part_3_fc/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 230
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "recog/part_3_fc/dense_1/kernel/Assign"
  op: "Assign"
  input: "recog/part_3_fc/dense_1/kernel"
  input: "recog/part_3_fc/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "recog/part_3_fc/dense_1/kernel/read"
  op: "Identity"
  input: "recog/part_3_fc/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense_1/kernel"
      }
    }
  }
}
node {
  name: "recog/part_3_fc/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 230
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recog/part_3_fc/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 230
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "recog/part_3_fc/dense_1/bias/Assign"
  op: "Assign"
  input: "recog/part_3_fc/dense_1/bias"
  input: "recog/part_3_fc/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "recog/part_3_fc/dense_1/bias/read"
  op: "Identity"
  input: "recog/part_3_fc/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense_1/bias"
      }
    }
  }
}
node {
  name: "part/recog/part_3_fc/dense_1/MatMul"
  op: "MatMul"
  input: "part/recog/part_3_fc/dropout/Identity"
  input: "recog/part_3_fc/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "part/recog/part_3_fc/dense_1/BiasAdd"
  op: "BiasAdd"
  input: "part/recog/part_3_fc/dense_1/MatMul"
  input: "recog/part_3_fc/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 324
          }
        }
        string_val: "feature_fusion/Conv/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv/BatchNorm/moving_mean"
        string_val: "feature_fusion/Conv/BatchNorm/moving_variance"
        string_val: "feature_fusion/Conv/weights/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_1/BatchNorm/moving_mean"
        string_val: "feature_fusion/Conv_1/BatchNorm/moving_variance"
        string_val: "feature_fusion/Conv_1/weights/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_2/BatchNorm/moving_mean"
        string_val: "feature_fusion/Conv_2/BatchNorm/moving_variance"
        string_val: "feature_fusion/Conv_2/weights/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_3/BatchNorm/moving_mean"
        string_val: "feature_fusion/Conv_3/BatchNorm/moving_variance"
        string_val: "feature_fusion/Conv_3/weights/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_4/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_4/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_4/BatchNorm/moving_mean"
        string_val: "feature_fusion/Conv_4/BatchNorm/moving_variance"
        string_val: "feature_fusion/Conv_4/weights/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_5/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_5/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_5/BatchNorm/moving_mean"
        string_val: "feature_fusion/Conv_5/BatchNorm/moving_variance"
        string_val: "feature_fusion/Conv_5/weights/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_6/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_6/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_6/BatchNorm/moving_mean"
        string_val: "feature_fusion/Conv_6/BatchNorm/moving_variance"
        string_val: "feature_fusion/Conv_6/weights/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_7/biases/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_7/weights/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_8/biases/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_8/weights/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_9/biases/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_9/weights/ExponentialMovingAverage"
        string_val: "global_step"
        string_val: "is_training"
        string_val: "recog/part_0_fc/dense/bias/ExponentialMovingAverage"
        string_val: "recog/part_0_fc/dense/kernel/ExponentialMovingAverage"
        string_val: "recog/part_0_fc/dense_1/bias/ExponentialMovingAverage"
        string_val: "recog/part_0_fc/dense_1/kernel/ExponentialMovingAverage"
        string_val: "recog/part_1_fc/dense/bias/ExponentialMovingAverage"
        string_val: "recog/part_1_fc/dense/kernel/ExponentialMovingAverage"
        string_val: "recog/part_1_fc/dense_1/bias/ExponentialMovingAverage"
        string_val: "recog/part_1_fc/dense_1/kernel/ExponentialMovingAverage"
        string_val: "recog/part_2_fc/dense/bias/ExponentialMovingAverage"
        string_val: "recog/part_2_fc/dense/kernel/ExponentialMovingAverage"
        string_val: "recog/part_2_fc/dense_1/bias/ExponentialMovingAverage"
        string_val: "recog/part_2_fc/dense_1/kernel/ExponentialMovingAverage"
        string_val: "recog/part_3_fc/dense/bias/ExponentialMovingAverage"
        string_val: "recog/part_3_fc/dense/kernel/ExponentialMovingAverage"
        string_val: "recog/part_3_fc/dense_1/bias/ExponentialMovingAverage"
        string_val: "recog/part_3_fc/dense_1/kernel/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/conv1/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 324
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "feature_fusion/Conv/BatchNorm/beta"
  input: "feature_fusion/Conv/BatchNorm/gamma"
  input: "feature_fusion/Conv/BatchNorm/moving_mean"
  input: "feature_fusion/Conv/BatchNorm/moving_variance"
  input: "feature_fusion/Conv/weights"
  input: "feature_fusion/Conv_1/BatchNorm/beta"
  input: "feature_fusion/Conv_1/BatchNorm/gamma"
  input: "feature_fusion/Conv_1/BatchNorm/moving_mean"
  input: "feature_fusion/Conv_1/BatchNorm/moving_variance"
  input: "feature_fusion/Conv_1/weights"
  input: "feature_fusion/Conv_2/BatchNorm/beta"
  input: "feature_fusion/Conv_2/BatchNorm/gamma"
  input: "feature_fusion/Conv_2/BatchNorm/moving_mean"
  input: "feature_fusion/Conv_2/BatchNorm/moving_variance"
  input: "feature_fusion/Conv_2/weights"
  input: "feature_fusion/Conv_3/BatchNorm/beta"
  input: "feature_fusion/Conv_3/BatchNorm/gamma"
  input: "feature_fusion/Conv_3/BatchNorm/moving_mean"
  input: "feature_fusion/Conv_3/BatchNorm/moving_variance"
  input: "feature_fusion/Conv_3/weights"
  input: "feature_fusion/Conv_4/BatchNorm/beta"
  input: "feature_fusion/Conv_4/BatchNorm/gamma"
  input: "feature_fusion/Conv_4/BatchNorm/moving_mean"
  input: "feature_fusion/Conv_4/BatchNorm/moving_variance"
  input: "feature_fusion/Conv_4/weights"
  input: "feature_fusion/Conv_5/BatchNorm/beta"
  input: "feature_fusion/Conv_5/BatchNorm/gamma"
  input: "feature_fusion/Conv_5/BatchNorm/moving_mean"
  input: "feature_fusion/Conv_5/BatchNorm/moving_variance"
  input: "feature_fusion/Conv_5/weights"
  input: "feature_fusion/Conv_6/BatchNorm/beta"
  input: "feature_fusion/Conv_6/BatchNorm/gamma"
  input: "feature_fusion/Conv_6/BatchNorm/moving_mean"
  input: "feature_fusion/Conv_6/BatchNorm/moving_variance"
  input: "feature_fusion/Conv_6/weights"
  input: "feature_fusion/Conv_7/biases"
  input: "feature_fusion/Conv_7/weights"
  input: "feature_fusion/Conv_8/biases"
  input: "feature_fusion/Conv_8/weights"
  input: "feature_fusion/Conv_9/biases"
  input: "feature_fusion/Conv_9/weights"
  input: "global_step"
  input: "is_training"
  input: "recog/part_0_fc/dense/bias"
  input: "recog/part_0_fc/dense/kernel"
  input: "recog/part_0_fc/dense_1/bias"
  input: "recog/part_0_fc/dense_1/kernel"
  input: "recog/part_1_fc/dense/bias"
  input: "recog/part_1_fc/dense/kernel"
  input: "recog/part_1_fc/dense_1/bias"
  input: "recog/part_1_fc/dense_1/kernel"
  input: "recog/part_2_fc/dense/bias"
  input: "recog/part_2_fc/dense/kernel"
  input: "recog/part_2_fc/dense_1/bias"
  input: "recog/part_2_fc/dense_1/kernel"
  input: "recog/part_3_fc/dense/bias"
  input: "recog/part_3_fc/dense/kernel"
  input: "recog/part_3_fc/dense_1/bias"
  input: "recog/part_3_fc/dense_1/kernel"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/conv1/BatchNorm/beta"
  input: "resnet_v1_50/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/conv1/weights"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_BOOL
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 324
          }
        }
        string_val: "feature_fusion/Conv/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv/BatchNorm/moving_mean"
        string_val: "feature_fusion/Conv/BatchNorm/moving_variance"
        string_val: "feature_fusion/Conv/weights/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_1/BatchNorm/moving_mean"
        string_val: "feature_fusion/Conv_1/BatchNorm/moving_variance"
        string_val: "feature_fusion/Conv_1/weights/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_2/BatchNorm/moving_mean"
        string_val: "feature_fusion/Conv_2/BatchNorm/moving_variance"
        string_val: "feature_fusion/Conv_2/weights/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_3/BatchNorm/moving_mean"
        string_val: "feature_fusion/Conv_3/BatchNorm/moving_variance"
        string_val: "feature_fusion/Conv_3/weights/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_4/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_4/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_4/BatchNorm/moving_mean"
        string_val: "feature_fusion/Conv_4/BatchNorm/moving_variance"
        string_val: "feature_fusion/Conv_4/weights/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_5/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_5/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_5/BatchNorm/moving_mean"
        string_val: "feature_fusion/Conv_5/BatchNorm/moving_variance"
        string_val: "feature_fusion/Conv_5/weights/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_6/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_6/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_6/BatchNorm/moving_mean"
        string_val: "feature_fusion/Conv_6/BatchNorm/moving_variance"
        string_val: "feature_fusion/Conv_6/weights/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_7/biases/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_7/weights/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_8/biases/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_8/weights/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_9/biases/ExponentialMovingAverage"
        string_val: "feature_fusion/Conv_9/weights/ExponentialMovingAverage"
        string_val: "global_step"
        string_val: "is_training"
        string_val: "recog/part_0_fc/dense/bias/ExponentialMovingAverage"
        string_val: "recog/part_0_fc/dense/kernel/ExponentialMovingAverage"
        string_val: "recog/part_0_fc/dense_1/bias/ExponentialMovingAverage"
        string_val: "recog/part_0_fc/dense_1/kernel/ExponentialMovingAverage"
        string_val: "recog/part_1_fc/dense/bias/ExponentialMovingAverage"
        string_val: "recog/part_1_fc/dense/kernel/ExponentialMovingAverage"
        string_val: "recog/part_1_fc/dense_1/bias/ExponentialMovingAverage"
        string_val: "recog/part_1_fc/dense_1/kernel/ExponentialMovingAverage"
        string_val: "recog/part_2_fc/dense/bias/ExponentialMovingAverage"
        string_val: "recog/part_2_fc/dense/kernel/ExponentialMovingAverage"
        string_val: "recog/part_2_fc/dense_1/bias/ExponentialMovingAverage"
        string_val: "recog/part_2_fc/dense_1/kernel/ExponentialMovingAverage"
        string_val: "recog/part_3_fc/dense/bias/ExponentialMovingAverage"
        string_val: "recog/part_3_fc/dense/kernel/ExponentialMovingAverage"
        string_val: "recog/part_3_fc/dense_1/bias/ExponentialMovingAverage"
        string_val: "recog/part_3_fc/dense_1/kernel/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v1_50/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v1_50/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v1_50/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/conv1/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 324
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_BOOL
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "feature_fusion/Conv/BatchNorm/beta"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "feature_fusion/Conv/BatchNorm/gamma"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "feature_fusion/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "feature_fusion/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "feature_fusion/Conv/weights"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "feature_fusion/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "feature_fusion/Conv_1/BatchNorm/gamma"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "feature_fusion/Conv_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "feature_fusion/Conv_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "feature_fusion/Conv_1/weights"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "feature_fusion/Conv_2/BatchNorm/beta"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "feature_fusion/Conv_2/BatchNorm/gamma"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "feature_fusion/Conv_2/BatchNorm/moving_mean"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "feature_fusion/Conv_2/BatchNorm/moving_variance"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "feature_fusion/Conv_2/weights"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "feature_fusion/Conv_3/BatchNorm/beta"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "feature_fusion/Conv_3/BatchNorm/gamma"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "feature_fusion/Conv_3/BatchNorm/moving_mean"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "feature_fusion/Conv_3/BatchNorm/moving_variance"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "feature_fusion/Conv_3/weights"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "feature_fusion/Conv_4/BatchNorm/beta"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "feature_fusion/Conv_4/BatchNorm/gamma"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "feature_fusion/Conv_4/BatchNorm/moving_mean"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "feature_fusion/Conv_4/BatchNorm/moving_variance"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "feature_fusion/Conv_4/weights"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "feature_fusion/Conv_5/BatchNorm/beta"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "feature_fusion/Conv_5/BatchNorm/gamma"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "feature_fusion/Conv_5/BatchNorm/moving_mean"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "feature_fusion/Conv_5/BatchNorm/moving_variance"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "feature_fusion/Conv_5/weights"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "feature_fusion/Conv_6/BatchNorm/beta"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "feature_fusion/Conv_6/BatchNorm/gamma"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "feature_fusion/Conv_6/BatchNorm/moving_mean"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "feature_fusion/Conv_6/BatchNorm/moving_variance"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "feature_fusion/Conv_6/weights"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "feature_fusion/Conv_7/biases"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "feature_fusion/Conv_7/weights"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "feature_fusion/Conv_8/biases"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "feature_fusion/Conv_8/weights"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "feature_fusion/Conv_9/biases"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "feature_fusion/Conv_9/weights"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "is_training"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@is_training"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "recog/part_0_fc/dense/bias"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "recog/part_0_fc/dense/kernel"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "recog/part_0_fc/dense_1/bias"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "recog/part_0_fc/dense_1/kernel"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_0_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "recog/part_1_fc/dense/bias"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "recog/part_1_fc/dense/kernel"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "recog/part_1_fc/dense_1/bias"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "recog/part_1_fc/dense_1/kernel"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_1_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "recog/part_2_fc/dense/bias"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "recog/part_2_fc/dense/kernel"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "recog/part_2_fc/dense_1/bias"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "recog/part_2_fc/dense_1/kernel"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_2_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "recog/part_3_fc/dense/bias"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "recog/part_3_fc/dense/kernel"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "recog/part_3_fc/dense_1/bias"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "recog/part_3_fc/dense_1/kernel"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recog/part_3_fc/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_157"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_158"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_159"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_160"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_161"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_162"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_163"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_164"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_165"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_166"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_167"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_168"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_169"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_170"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_171"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_172"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_173"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_174"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_175"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_176"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_177"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_178"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_179"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_180"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_181"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_182"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_183"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_184"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_185"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_186"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_187"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_188"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_189"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "save/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_190"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "save/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_191"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "save/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_192"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "save/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_193"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
  input: "save/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_194"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_195"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_196"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_197"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_198"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_199"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_200"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_201"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_202"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_203"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_204"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_205"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_206"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_207"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_208"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_209"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_210"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_211"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_212"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_213"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_214"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_215"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_216"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_217"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_218"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_219"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_220"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_221"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_222"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_223"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_224"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_225"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_226"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_227"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_228"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_229"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_230"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_231"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_232"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_233"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_234"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_235"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_236"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_237"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_238"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_239"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_240"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_241"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_242"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_243"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_244"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_245"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_246"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_247"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_248"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_249"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_250"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_251"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_252"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_253"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_254"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_255"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_256"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_257"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_258"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_259"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_260"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_261"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_262"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_263"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_264"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_265"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_266"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_267"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_268"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_269"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_270"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_271"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_272"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_273"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_274"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_275"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_276"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_277"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_278"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_279"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_280"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_281"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_282"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_283"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_284"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "save/RestoreV2:284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_285"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "save/RestoreV2:285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_286"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "save/RestoreV2:286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_287"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "save/RestoreV2:287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_288"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
  input: "save/RestoreV2:288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_289"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_290"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_291"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_292"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_293"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_294"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_295"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_296"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_297"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_298"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_299"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_300"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_301"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_302"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_303"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_304"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_305"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_306"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_307"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_308"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_309"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_310"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_311"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_312"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_313"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_314"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_315"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_316"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_317"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_318"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_319"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/beta"
  input: "save/RestoreV2:319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_320"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_321"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_322"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_323"
  op: "Assign"
  input: "resnet_v1_50/conv1/weights"
  input: "save/RestoreV2:323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_11"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_12"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_13"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_14"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_15"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_157"
  input: "^save/Assign_158"
  input: "^save/Assign_159"
  input: "^save/Assign_16"
  input: "^save/Assign_160"
  input: "^save/Assign_161"
  input: "^save/Assign_162"
  input: "^save/Assign_163"
  input: "^save/Assign_164"
  input: "^save/Assign_165"
  input: "^save/Assign_166"
  input: "^save/Assign_167"
  input: "^save/Assign_168"
  input: "^save/Assign_169"
  input: "^save/Assign_17"
  input: "^save/Assign_170"
  input: "^save/Assign_171"
  input: "^save/Assign_172"
  input: "^save/Assign_173"
  input: "^save/Assign_174"
  input: "^save/Assign_175"
  input: "^save/Assign_176"
  input: "^save/Assign_177"
  input: "^save/Assign_178"
  input: "^save/Assign_179"
  input: "^save/Assign_18"
  input: "^save/Assign_180"
  input: "^save/Assign_181"
  input: "^save/Assign_182"
  input: "^save/Assign_183"
  input: "^save/Assign_184"
  input: "^save/Assign_185"
  input: "^save/Assign_186"
  input: "^save/Assign_187"
  input: "^save/Assign_188"
  input: "^save/Assign_189"
  input: "^save/Assign_19"
  input: "^save/Assign_190"
  input: "^save/Assign_191"
  input: "^save/Assign_192"
  input: "^save/Assign_193"
  input: "^save/Assign_194"
  input: "^save/Assign_195"
  input: "^save/Assign_196"
  input: "^save/Assign_197"
  input: "^save/Assign_198"
  input: "^save/Assign_199"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_200"
  input: "^save/Assign_201"
  input: "^save/Assign_202"
  input: "^save/Assign_203"
  input: "^save/Assign_204"
  input: "^save/Assign_205"
  input: "^save/Assign_206"
  input: "^save/Assign_207"
  input: "^save/Assign_208"
  input: "^save/Assign_209"
  input: "^save/Assign_21"
  input: "^save/Assign_210"
  input: "^save/Assign_211"
  input: "^save/Assign_212"
  input: "^save/Assign_213"
  input: "^save/Assign_214"
  input: "^save/Assign_215"
  input: "^save/Assign_216"
  input: "^save/Assign_217"
  input: "^save/Assign_218"
  input: "^save/Assign_219"
  input: "^save/Assign_22"
  input: "^save/Assign_220"
  input: "^save/Assign_221"
  input: "^save/Assign_222"
  input: "^save/Assign_223"
  input: "^save/Assign_224"
  input: "^save/Assign_225"
  input: "^save/Assign_226"
  input: "^save/Assign_227"
  input: "^save/Assign_228"
  input: "^save/Assign_229"
  input: "^save/Assign_23"
  input: "^save/Assign_230"
  input: "^save/Assign_231"
  input: "^save/Assign_232"
  input: "^save/Assign_233"
  input: "^save/Assign_234"
  input: "^save/Assign_235"
  input: "^save/Assign_236"
  input: "^save/Assign_237"
  input: "^save/Assign_238"
  input: "^save/Assign_239"
  input: "^save/Assign_24"
  input: "^save/Assign_240"
  input: "^save/Assign_241"
  input: "^save/Assign_242"
  input: "^save/Assign_243"
  input: "^save/Assign_244"
  input: "^save/Assign_245"
  input: "^save/Assign_246"
  input: "^save/Assign_247"
  input: "^save/Assign_248"
  input: "^save/Assign_249"
  input: "^save/Assign_25"
  input: "^save/Assign_250"
  input: "^save/Assign_251"
  input: "^save/Assign_252"
  input: "^save/Assign_253"
  input: "^save/Assign_254"
  input: "^save/Assign_255"
  input: "^save/Assign_256"
  input: "^save/Assign_257"
  input: "^save/Assign_258"
  input: "^save/Assign_259"
  input: "^save/Assign_26"
  input: "^save/Assign_260"
  input: "^save/Assign_261"
  input: "^save/Assign_262"
  input: "^save/Assign_263"
  input: "^save/Assign_264"
  input: "^save/Assign_265"
  input: "^save/Assign_266"
  input: "^save/Assign_267"
  input: "^save/Assign_268"
  input: "^save/Assign_269"
  input: "^save/Assign_27"
  input: "^save/Assign_270"
  input: "^save/Assign_271"
  input: "^save/Assign_272"
  input: "^save/Assign_273"
  input: "^save/Assign_274"
  input: "^save/Assign_275"
  input: "^save/Assign_276"
  input: "^save/Assign_277"
  input: "^save/Assign_278"
  input: "^save/Assign_279"
  input: "^save/Assign_28"
  input: "^save/Assign_280"
  input: "^save/Assign_281"
  input: "^save/Assign_282"
  input: "^save/Assign_283"
  input: "^save/Assign_284"
  input: "^save/Assign_285"
  input: "^save/Assign_286"
  input: "^save/Assign_287"
  input: "^save/Assign_288"
  input: "^save/Assign_289"
  input: "^save/Assign_29"
  input: "^save/Assign_290"
  input: "^save/Assign_291"
  input: "^save/Assign_292"
  input: "^save/Assign_293"
  input: "^save/Assign_294"
  input: "^save/Assign_295"
  input: "^save/Assign_296"
  input: "^save/Assign_297"
  input: "^save/Assign_298"
  input: "^save/Assign_299"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_300"
  input: "^save/Assign_301"
  input: "^save/Assign_302"
  input: "^save/Assign_303"
  input: "^save/Assign_304"
  input: "^save/Assign_305"
  input: "^save/Assign_306"
  input: "^save/Assign_307"
  input: "^save/Assign_308"
  input: "^save/Assign_309"
  input: "^save/Assign_31"
  input: "^save/Assign_310"
  input: "^save/Assign_311"
  input: "^save/Assign_312"
  input: "^save/Assign_313"
  input: "^save/Assign_314"
  input: "^save/Assign_315"
  input: "^save/Assign_316"
  input: "^save/Assign_317"
  input: "^save/Assign_318"
  input: "^save/Assign_319"
  input: "^save/Assign_32"
  input: "^save/Assign_320"
  input: "^save/Assign_321"
  input: "^save/Assign_322"
  input: "^save/Assign_323"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_9"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
}
versions {
  producer: 27
}
